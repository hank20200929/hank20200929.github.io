<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一文掌握Prompt：万能框架+优化技巧+常用指标</title>
      <link href="2024/08/15/prompt-engineering/"/>
      <url>2024/08/15/prompt-engineering/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>随着大模型在2023年横空出世，“Prompt 工程” 应运而生，作为用好大模型最重要的武器，Prompt 的好坏对模型效果有着决定性的影响。然而，网络上大量相关文章多是罗列“Prompt 工程” 中的若干技巧，少有体系化的总结，让人看完依然不知道该如何入手。</p><p>本文希望结合我们在 “Prompt 工程” 中的实践经验，更加体系化地对 “Prompt 工程” 进行梳理，希望可以一步步地帮助大家用好大模型，人人都是 Prompt 工程师。</p><a id="more"></a><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><h4 id="Prompt-与-GPT-的前世今生"><a href="#Prompt-与-GPT-的前世今生" class="headerlink" title="Prompt 与 GPT 的前世今生"></a>Prompt 与 GPT 的前世今生</h4><p>如今我们所讨论的大语言模型，大多专指2023年 “ChatGPT” 爆发以来出现的众多模型，而非广义的 Transformer 架构下的所有模型。而 Prompt 的概念也正是伴随 “GPT” 模型的发展应运而生的。我们要明白 Prompt 是什么，就要知道 Prompt 的前世今生，这就要从 GPT 的发展开始谈起。</p><p><img src="/2024/08/15/prompt-engineering/b732f76a30b22a2cee8776a6a327b0b3.png" alt="img" loading="lazy"></p><p>如上图所示，自 2017 年 Transformer 诞生以来，在这个架构的基础上，以 BERT 为代表的模型和以 GPT 为代表的模型便以极快的速度向前发展。在 2018 年 BERT 诞生后，语言模型便开始重塑 NLP 领域，快速在市场中得到广泛应用，时至今日这些语言模型依然是 NLP 领域中最被广泛应用的模型，我们今天看到以 GPT 为代表的各类大模型也是其中之一。</p><p>从 GPT 的发展来看，我们可以大致划分为4个阶段，**” GPT1 - GPT2 - GPT3 - ChatGPT “**，我们可以从这个发展过程中了解到 Prompt 是如何诞生的，以此更好的了解 Prompt。</p><p><strong>阶段1：GPT-1 诞生在 Transformer 初期，</strong>是最早期基于 Transformer 架构打造的模型之一，其采用了和 BERT 相同的范式，<strong>通过 “pretrain + finetune” 的方式，</strong>首先让模型在大量未标注的数据上自监督的进行学习，完成预训练，随后在应用时再使用有监督数据进行微调，以此让模型可以适用于各种任务。在这种范式下 BERT 作为双向模型，可以充分的获取上下文信息，这让他在各类任务中都展现出了更精准更稳定的效果，而 GPT 作为单向模型，更擅长生成任务，而由于在这个阶段还处于大模型发展的早期，模型规模和效果还没有成长起来，因此生成的不稳定性使得 GPT 并没有被大规模应用。时至今日，即便 GPT 已经展现出了令人惊艳的效果，但目前 BERT 类的模型依然是各个业务使用更多的模型。</p><p><strong>阶段2：相比 GPT-1，GPT-2 第一次提出了全新的范式，</strong>当我们扩大模型规模增加训练数据，让模型在一个称为 WebText 的由数百万个网页组成的数据集上完成预训练后，模型不再需要任何监督数据，就可以完成各类任务。在 OpenAI 的 Blog 中我们可以看到，团队在研究过程中发现，<strong>提升模型规模及训练数据的体量，可以让模型在 zero-shot 任务中的效果明显提升，</strong>这也在今天被认为是对 scaling law 的第一次发现，虽然当时还没有诞生智能涌现的现象。也有人解读，由于 BERT 在各个领域展现出的优异效果，GPT 被迫找到了新的发展方向，也为如今的智能涌现奠定了基础。由此，GPT 开启了与 BERT 截然不同的范式，并在新的范式下进行研发，专注模型在 zero-shot 中的效果。</p><p><strong>阶段3：沿着 GPT-2 增大模型体量和训练数据规模的思路，</strong>GPT-3 使用了 570G 的训练数据，达到了 GPT-2 的15倍，参数量更是达到了惊人的 1750B，是 GPT-2 的 116 倍。<strong>参数量的提升让 scaling law 大显神威，让模型在各个领域中都展现出了令人惊艳的效果，尤其是在 zero-shot 方面，</strong>发布会上通过手绘 UI 图生成前端代码的例子至今让人印象深刻。GPT-3 在 2020 年底发布，当时 Transformer 已经经过了4年的发展，BERT 类模型已经在各类应用中被广泛使用，成为了绝对的主流。然而在这种情况下，GPT-3 的发布也依然成为了领域中最瞩目的事件，即便还是有很多问题，但其远超预期的效果依然令人震撼。</p><p><strong>阶段4：</strong>之后的故事大家都非常熟悉了，<strong>OpenAI 在 GPT-3 的基础上针对不同场景进行了优化，在“多轮对话”的优化中诞生了“ChatGPT”，</strong>随后成为了世界上最火热的话题，也被认为是 AI 市场化的起点。GPT-3 后的模型不再开源，也没有论文公开发表，我们只能在 Blog 中获取一些信息，此处不再进行展开。</p><p>最后我们来做个总结，从领域发展的角度我们可以看到 3 种不同的研发范式：</p><ol><li>Transformer 之前：有监督训练（train）</li><li>GPT1 &amp; BERT：无监督预训练（pre-train） + 有监督微调（finetune）</li><li>GPT2 &amp; GPT3：无监督预训练（pre-train） + 提示词（Prompt）</li></ol><p>我们可以清晰的看到其中的不同，模型能力的研发越来越不依赖 “训练” 的过程，而是更大程度的依赖 “预训练”，依赖 “模型” 本身的能力。在 BERT 所代表的范式下，我们还可以通过 “微调” 在参数层面影响模型。而到了以 “GPT3” 为代表的范式下，也就是我们现在用的大模型，我们不再借助 “微调” 的方式调试模型，而是通过 “输入” 直接影响 “输出” 的质量，而如何在应用中得到一个好的 “输入” 就是 “Prompt 工程” 需要做的事。</p><p>以上，我从发展的角度谈论了 Prompt 的前世今生，Prompt 是从何而来，为什么我们需要 “Prompt 工程”，希望可以更好的帮助大家了解 Prompt，下面我就来具体谈谈 Prompt 是什么。</p><h4 id="Prompt-到底是什么？"><a href="#Prompt-到底是什么？" class="headerlink" title="Prompt 到底是什么？"></a>Prompt 到底是什么？</h4><p>Prompt 译为 “提示”，与 “zero-shot” 的概念相辅相成，“zero-shot”  就是不通过训练直接向模型提问的应用方式，而 Prompt 就是指提问的方式。从这个概念上看 “模版” 可能是更合适的称呼，为什么要用 “提示” 这个单词呢？</p><p>实际上，在刚刚出现这个概念时并没有 “Prompt” 这样的称呼，在早期的论文中其往往会被称为 “输入形式（format）” 或 “输入模版（template）”，但随着领域的发展，尤其是在 GPT-3 之后，Prompt 的叫法才被逐步确定，大家认同 “提示” 的概念与其作用更加贴切，尤其是在大语言模型的语境下尤为合适，因此逐渐成为了公认的称呼。</p><p>那 Prompt 到底在提示什么呢？从前文中对范式的解读来看，模型能力的应用越来越向 “预训练” 的部分倾斜，绝大多数能力应当是在 “预训练” 阶段就构成的，而非通过进一步的训练构建。<strong>而在这种思想的基础上，Prompt 则像一把解锁模型能力的钥匙，让这些 “预训练” 阶段构成的能力唯我所用。因此，Prompt 就是在提示模型回忆起自己在预训练时学习到的能力。</strong></p><p><strong>我们可以把 “知识” 和 “能力” 进行更进一步的分解，我们更多的是希望使用大模型的能力（理解，总结，生成，推理，e.t.c.），而非知识。</strong>与现在越来越火热的 RAG 技术一样，我们更倾向于将知识通过外部注入的方式让模型试用，而能力则完全需要依赖预训练阶段。我们要做的是通过 Prompt 调用大模型的能力去解决问题，让这些能力表现的更精准，而并非把他当成一个知识库。如果与人做对比也一样能得到这个结论，人可以从外部收集信息，并利用自身的智能进行决策，而不是把知识都装到自己脑子里。Sam Altman 在早期采访中也提到，把大模型当成搜索引擎的应用方式是错误的，智能的体现才是大模型的关键。</p><p>总结而言，Prompt 就是在提示大模型 “回忆” 起自己的某些能力，在合适的场景下为我们解决问题，这也是 Prompt 工程最核心的理念之一。</p><h4 id="为什么不能依赖训练？微调有什么问题？"><a href="#为什么不能依赖训练？微调有什么问题？" class="headerlink" title="为什么不能依赖训练？微调有什么问题？"></a>为什么不能依赖训练？微调有什么问题？</h4><p>除了闭源大模型外，现在小型的开源模型也是应用的主流，也随之诞生了 LoRa 这样的训练技术，可以在较小的成本下完成训练，那是否就意味着我们可以不再依赖 Prompt，而是像以前一样通过 “微调” 的范式调试模型呢？</p><p><strong>首先是成本问题，</strong>Prompt 这种新范式的诞生是由于大模型超大的体量，导致我们无法在较小的成本下对参数产生足够的影响，即便是开源的较小的模型我们也大多采用 LoRa 这类 “附加参数” 的方式进行微调。因此，对于大模型应用而言，考虑到成本，我们实际上根本无法完成 “训练” 的过程。</p><p><strong>其次是效果问题，</strong>如果我们利用 LoRa 这样的技术进行微调，对于模型参数的影响是很有限的，目前更倾向认为这是一种“对齐”的过程，且还很有可能引发“遗忘”的问题。而如果你希望通过微调让模型掌握 “知识”，这也不是一个好的思路，这意味着你需要不断的通过训练来保持知识的更新，且需要针对不同领域训练多个不同的模型，同时训练也并不是一个可靠的过程，相比之下现在“超长上下文的模型” 加 “RAG” 被认为是更可靠的方式。</p><p><strong>最后，这也不是一个长期可靠的研发思路，</strong>大模型现在惊艳的效果是基于 “scaling law” 的智能涌现，本质还是在应用大模型预训练阶段的能力。无论是“开源”还是“闭源”模型，一定是通过参数量的增加或其他方式，让模型本身的能力不断提升，且目前看依然保持指数级的增长。在这种情况下，过于依赖基于任务的训练是不长久的，因为大模型的本质不是通过训练构建能力，而是通过输入调度能力，并在任务维度进行对齐。即便是开源模型的应用，长期来看也不会是以任务维度进行训练。</p><p><strong>因此，训练与微调并不能取代 Prompt 的作用，</strong>且这种范式在众多方面都展现出了弊端，这也证明了 Prompt 工程的重要性，Prompt 是新范式下应用模型能力的关键。</p><h4 id="为什么要写这篇文章？"><a href="#为什么要写这篇文章？" class="headerlink" title="为什么要写这篇文章？"></a>为什么要写这篇文章？</h4><p>自大模型横空出世依赖变成为了世界最大的热点，而 “Prompt 工程” 一直是其中最为火热的方向之一，早在大模型发展之初很多人便开始呼吁设立 “Prompt 工程师” 的职位，似乎在新的时代下写好 Prompt，用好大模型，是各个领域最重要的事情之一。在这样的背景下，Prompt 相关的研究已经积累的十分充足，无论是公司内外都积累了众多的文章和课程，其中最火的 《Prompt Engineering Guide》，和吴恩达老师的《ChatGPT Prompt Engineering for Developers》，都对 “Prompt 工程” 作出了详细的介绍，是非常重要的学习资料。那为什么我还要写这篇文章呢？</p><p><img src="/2024/08/15/prompt-engineering/2674a173e081f2ef37feb7ad7ace589c.png" alt="img" loading="lazy"></p><p>这些文章和教程都有一个共通的问题，他们大多是对技巧的罗列，例如《Prompt Engineering Guide》中就罗列了大量技巧，告诉你可以在 Prompt 中 “增加示例”，“增加角色” 等等。但并没有一个体系化的结构，一个标准化的工作流，告诉大家如何一步步的完成一个 “Prompt”，如何从0开始完成 “Prompt 工程” 的工作。</p><p>因此本文尝试结合我们的研发经验，体系化的对 “Prompt 工程” 的工作进行总结，得到一些标准化的工作流程，并通过这样结构化的整理，可以更好的对 “Prompt” 进行管理，让“Prompt”作为大模型应用的基石，更加可靠有效可扩展。具体而言，我们把从0到1完成一个 Prompt 的过程拆分为了5个步骤。我们利用一套统一的模版，解决最困难的初始 Prompt 书写的问题，并结合实际应用一步步的进行优化，从而体系化的完成 “Prompt 工程” 的工作。</p><p><img src="/2024/08/15/prompt-engineering/1087d32c334467bba03c07ad8d90c66b.png" alt="img" loading="lazy"></p><p>我们希望通过我们的方法，可以提升 Prompt 工程的工作效率，降低 Prompt 技术的应用成本，并解决 Prompt 难以管理的问题。让大家都可以从0到1的完成大模型的调试，并让大模型在各个领域中被更好的应用。</p><h3 id="Prompt-万能框架"><a href="#Prompt-万能框架" class="headerlink" title="Prompt 万能框架"></a>Prompt 万能框架</h3><p><img src="/2024/08/15/prompt-engineering/de37d4480e2da244e20c7d7d0e5c97e3.png" alt="img" loading="lazy"></p><p>在编写 Prompt 时，从0到1的编写出第一版 Prompt 往往是最难的，而基于已有 Prompt 利用各种技巧进行优化则相对简单。善于解决 “数理问题” 的我们在面对这样一个偏 “文理问题” 的任务时，就像小时候写作文一样难以提笔。如上图所示，为了解决这个问题，我们使用了一套 “万能模版”，把一个 Prompt 拆分成了 “立角色 + 述问题 + 定目标 + 补要求” 这四个部分，希望通过结构化的拆分完成这最困难的一步，无论面对什么任务，利用这个模版都可以得到一个“及格”的 Prompt。下面我就具体和大家阐述一下这个模版是如何得到的，为什么他是有效的。</p><p>对与 Prompt 的作用和定位已经在第一章中进行了详细的讨论，Prompt 的作用就是根据我们的问题调用模型的能力，我们要通过提问的方式，明确的让模型知道我们想要什么，我们的目标是什么，从这个基本思想出发，Prompt 应该包含以下几点：</p><p><img src="/2024/08/15/prompt-engineering/6245da5f644b6a50e3164015de838d68.png" alt="img" loading="lazy"></p><ol><li><strong>问题是什么：</strong>首先你要告诉模型你的问题是什么，你的任务是什么，要尽量描述清楚你的需求。</li><li><strong>你要做什么：</strong>下面你需要告诉大模型具体要做什么，比如做一份攻略，写一段代码，对文章进行优化，等等。</li><li><strong>有什么要求：</strong>最后我们往往还需求对任务补充一些要求，比如按特定格式输出，规定长度限制，只输出某些内容，等等。</li></ol><p>通这 3 部分的描述我们就把 “要大模型做什么” 描述清楚了，这个想法十分自然，即便不是大模型，而是希望其他人为你完成某项任务，往往也需要通过这 3 部分把问题描述清楚。由于这仅仅是第一版 Prompt，你不需要描述的过于详细，也不需要使用技巧，只需要用简练的语言把这几部分描述清晰即可。以下是几个示例：</p><p><strong>例1：生成产品摘要</strong> 问题是什么：你的任务是帮我生成一个产品的简短摘要。 你要做什么：我会给你产品的需求文档，及用户对产品的评价，请结合这些信息概括产品的功能及现状，为我生成一份产品摘要。 有什么要求：请尽量概括产品的特点，并用轻松幽默的语言风格进行编写，摘要的字数不要超过50个字。</p><p><strong>例2：生成代码注释</strong> 问题是什么：你的任务是帮我的代码生成注释。 你要做什么：我有一段 python 代码，需要你对代码的内容进行分析，并为代码添加注释。 有什么要求：请结合代码内容，尽量详细的补充注释，不要遗漏，每条注释请以 “comment:” 作为前缀。</p><p><strong>例3：生成测试用例</strong> 问题是什么：你的任务是帮我设计一款产品的测试用例。</p><p>你要做什么：我会提供给你产品的需求文档，需要你结合需求的功能描述进行测试用例的编写。</p><p>有什么要求：请结合需求中功能的结构，对测试点进行梳理，并有层级的输出测试用例，请保证每一个功能的测试点没有遗漏。</p><p>以上是3个简单的示例，让大家更直观的感受这 3 部分的含义，在实际应用中这 3 部分的内容会比例子中复杂的多，此处仅仅为了说明框架的结构，实际内容没有参考价值，各部分内容的细化会在第三章中详细展开。</p><p><strong>在描述清楚任务后，我们就需要调度模型的能力去完成我们的任务，</strong>不同的任务需要用到不同的能力，这往往依赖认为的拆分。我们可以想像，当我们让一个小白帮我们完成一项任务时，我们需要对任务进行分解，并告诉他每一步需要怎么做，以此来让他完成一项复杂的任务。对于大模型而言，这当然也是适用的，甚至十分好用，这在第5章的 “CoT” 中还会再次提到。</p><p>你当然可以人为的完成这种拆分，再一条条的解释给大模型，但这种做法并不通用，每个领域都有自己独特的专项能力，每个任务都有自己的工作流程，因此这种方案并不适合放到一个通用的框架当中。<strong>好在大模型能力的调用还存在一条捷径，那就是“角色”，他就像大模型里自带一个“能力包”，可以很容易的对模型能力进行调用。</strong>每一个角色，都对应着该角色包含的若干能力，我们可以通过设定角色，“提示”大模型使用该角色对应的能力，这与前文“Prompt 到底是什么” 中介绍的想法极其匹配，充分说明是“Prompt” 提示的作用，通过简单的“提示”调用出大模型预先训练的能力，这也就是“角色”如此有用的原因。</p><p><img src="/2024/08/15/prompt-engineering/43ea3f66e808dbfa61cc5d8077c869ee.png" alt="img" loading="lazy"></p><p>由此我们就最终得到了我们的 “Prompt 模版”，通过这个统一的框架我们可以完成绝大多数 Prompt 初版的编写，让大家在面对各类任务时可以高效的完成从0到1的尝试，而不必陷入无从下笔的困境。</p><p>除了效果之外，对 Prompt 结构化的拆分也对 Prompt 管理提供了很大帮助，我们的 Prompt 库不再是大段的文本，而是拆分成了4张表“角色表”，“问题表”，“目标表”，“要求表”。通过这种方式我们可以很大的提升 Prompt 的灵活性，并通过动态组合4个元素的方式完成各类任务，这在面对复杂任务，或通过多模型解决问题时，会提供稳定有效的支撑。</p><h3 id="框架的细化"><a href="#框架的细化" class="headerlink" title="框架的细化"></a>框架的细化</h3><p><img src="/2024/08/15/prompt-engineering/229df7e7786dfb66e4d794b7f6b8296c.png" alt="img" loading="lazy"></p><p>在第二章中我们已经明确了 “Prompt 工程” 的第一步，通过我们的框架，在任何任务中我们都可以完成 Prompt 从 0 到 1 的编写，而这个初版的 Prompt 还只是一个雏形，由于各部分信息还不完整，往往不能达到我们的预期，框架提供了 Prompt 的骨架，还需要我们进一步补充血肉，下面我会对框架的每一部分进行更详细的分解，通过内容的补全一步步的提升模型的效果。</p><h4 id="立角色"><a href="#立角色" class="headerlink" title="立角色"></a>立角色</h4><p>与第二章中对 “角色” 的理解一致，<strong>“角色” 可以被当作大模型的“能力包”或“语法糖”，</strong>我们不再需要对每一项能力进行详细的描述，对任务进行更细节的分解，而是可以通过 import “角色” 的方式，使用这个 “角色” 背后对应的各项能力。那我们该如何设立角色，才是这个“能力包”的正确使用方式呢？</p><p>大家都有招聘的经历，我们可以想象，大模型就是我们要招的人，我们需要设定一个能力模型，来完成我们指定的工作。我们在招聘时通常都会有明确的要求，在JD中要有清晰的描述，这样才能找到最合适的人选。<strong>这与大模型的角色设置一样，我们要清晰明确的描述这个角色，才能充分 “提示” 大模型，让大模型知道该调用哪些能力。</strong></p><p>我们不妨试想一下在招聘 JD 中，我们会要求哪些内容。通常会包含：工作年份，教育水平，项目经历，工作技能，荣誉奖项等等。<strong>我们完全可以按照这个思路，创建一个语言模版，帮助我们创立角色。</strong></p><p>以下是我在使用的角色模版，当然 Prompt 的构造十分灵活，展示的示例仅供参考：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">**角色模版：**</span><br><span class="line"></span><br><span class="line">现在你是一位优秀的&#123;&#123;你想要的身份&#125;&#125;，拥有&#123;&#123;你想要的教育水平&#125;&#125;，并且具备&#123;&#123;你想要的工作年份及工作经历&#125;&#125;，你的工作内容是&#123;&#123;与问题相关的工作内容&#125;&#125;，同时你具备以下能力&#123;&#123;你需要的能力&#125;&#125;</span><br><span class="line"></span><br><span class="line">**例：心理咨询师**</span><br><span class="line"></span><br><span class="line">现在你是一位优秀的 &#123;&#123;心理咨询师&#125;&#125;，拥有 &#123;&#123;心理咨询、临床心理学等专业的硕士或博士学位&#125;&#125;，并且具备 &#123;&#123;多年的心理咨询工作经验，在不同类型的心理咨询机构、诊所或医院积累了丰富的临床实践经验&#125;&#125;，你的工作内容是 &#123;&#123;为咨询者处理各种心理问题，并帮助你的咨询者找到合适的解决方案&#125;&#125;，同时你具备以下能力：</span><br><span class="line"></span><br><span class="line">&#123;&#123;</span><br><span class="line"></span><br><span class="line">1. 专业知识：你应该拥有心理学领域的扎实知识，包括理论体系、治疗方法、心理测量等，可以为你的咨询者提供专业、有针对性的建议。</span><br><span class="line">2. 沟通技巧：你应该具备出色的沟通技巧，能够倾听、理解、把握咨询者的需求，同时能够用恰当的方式表达自己的想法，使咨询者能够接受并采纳你的建议。</span><br><span class="line">3. 同理心：你应该具备强烈的同理心，能够站在咨询者的角度去理解他们的痛苦和困惑，从而给予他们真诚的关怀和支持。</span><br><span class="line">4. 持续学习：你应该有持续学习的意愿，跟进心理学领域的最新研究和发展，不断更新自己的知识和技能，以便更好地服务于你的咨询者。</span><br><span class="line">5. 良好的职业道德：你应该具备良好的职业道德，尊重咨询者的隐私，遵循专业规范，确保咨询过程的安全和有效性。</span><br><span class="line"></span><br><span class="line">&#125;&#125;</span><br><span class="line"></span><br><span class="line">以上是一个简单的示例，角色的设置往往需要编写者对角色有一定的了解，这可以更好的帮助你补全你的模版，但如果你不了解你要设置的角色，不知道这些信息该如何填写，我们如何可以获取到这部分信息呢？</span><br><span class="line"></span><br><span class="line">**其实，我们可以沿着 “招聘 JD” 的思路，通过招聘网站上的招聘信息补全我们的数据。**例如，我要让大模型帮我完成一个 “财务分析” 相关的任务，而我此前对这个领域毫无了解，此时就可以通过招聘网站的职位信息，完成角色的设置：</span><br><span class="line"></span><br><span class="line">![img](prompt-engineering&#x2F;e56e3408fddab9657fbcd3d09f50e0bb.png)</span><br><span class="line"></span><br><span class="line">**例：财务分析**</span><br><span class="line"></span><br><span class="line">现在你是一位优秀的&#123;&#123;财务分析顾问&#125;&#125;，拥有&#123;&#123;财务学、经济学等专业的硕士或博士学位&#125;&#125;，并且具备&#123;&#123;八年以上的财务分析工作经验，在不同类型的公司进行过一线基金财务分析，财务报告产出等工作，积累了丰富的实践经验&#125;&#125;，你的工作内容是&#123;&#123;对投融资数据进行分析，从管理层的视角设计数据分析框架和汇报体系&#125;&#125;，同时你具备以下能力：</span><br><span class="line"></span><br><span class="line">&#123;&#123;</span><br><span class="line"></span><br><span class="line">1. 专业知识：你拥有较强的数据分析能力和丰富的财务分析与报告能力。</span><br><span class="line">2. 较强的分析问题解决问题能力和框架性思维能力。</span><br><span class="line">3. 具有很强的学习能力，以及很强的自我驱动力。</span><br><span class="line">4. 有好奇心，愿意挑战自己，不断开拓新的领域。</span><br><span class="line">5. 中英文流利，优秀的中英文书写能力，良好的沟通能力。</span><br><span class="line"></span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><p>以上，就是借助 “招聘 JD” 完成一个完全陌生领域角色的示例，而通常而言角色与任务的关联性很大，我们对角色的了解越深入，就越能设定出符合预期的角色，即便我们可以采用这种方案进行兜底，但在 “Prompt 工程” 中人的先验经验依然十分重要。</p><h4 id="述问题-amp-定目标"><a href="#述问题-amp-定目标" class="headerlink" title="述问题 &amp; 定目标"></a>述问题 &amp; 定目标</h4><p>对问题的描述由 “述问题” 和 “定目标” 两部分组成，是 Prompt 中信息含量最大的部分，也是和任务最相关的部分，我们要<strong>明确的描述我们希望大模型做的工作，</strong>才能让大模型输出最符合预期的结果。</p><p>除了要描述的清晰明确外，此部分值得强调的就是对<strong>任务的分解，</strong>这在复杂任务上尤为重要。如果我们需要大模型完成的任务过于复杂，我们则需要先人工对任务进行拆分，并尽量详细的描述任务中包含的各个部分，这与常用的  “CoT” 的优化方式类似，通过把复杂任务拆分成若干个子部分的方式提升模型的效果。</p><p><strong>我们也可以把这种拆分当作一个任务维度的对齐，</strong>当我们用概括的语言描述一项任务时，隐含了大量的背景知识和预期。例如，当我们希望大模型帮我们 “制作一份旅游攻略” 时，我们希望他能帮我们 “规划行程”，“收集信息”，“预定酒店” 等等，而这些信息往往都被包含在 “旅游攻略” 当中。<strong>如果我们不明确的对任务进行拆分，大模型就不知道我们的任务具体需要包含哪些部分，因此这个任务维度的对齐十分重要。</strong>下面我举几个例子：</p><p><strong>例1：请帮我制作一份深圳的旅游攻略</strong> 请帮我制作一份深圳的旅游攻略，以下是一些基本步骤和思考方式：</p><ol><li>研究和收集信息：查找关于深圳的旅游信息，包括主要的旅游景点，当地的文化和历史，美食，交通，住宿等。</li><li>规划行程：根据你收集的信息，规划你的行程。考虑你想要去的地方，你有多少时间，你的预算等。确保你的行程是实际和可行的。</li><li>预订交通和住宿：一旦你确定了你的行程，你可以开始预订你的交通和住宿。比较不同的选项，找到最适合你的。</li><li>准备必要的物品：根据你的行程和新疆的天气，准备你需要的物品，比如衣服，鞋子，相机，地图等。</li></ol><p><strong>例2：请根据需求帮我设计测试用例</strong></p><p>请根据需求帮助我设计测试用例，测试用例的设计是一个系统化的过程，以下是一些基本步骤和思考方式：</p><ol><li>理解需求：首先，你需要深入理解软件的需求和功能。这包括阅读需求文档，理解用户故事，或者与项目经理和开发人员进行讨论。</li><li>确定测试范围：确定你需要测试哪些功能和特性。这可能包括正常操作，边缘情况，错误处理等。</li><li>设计测试策略：确定你将如何测试这些功能。这可能包括单元测试，集成测试，系统测试，性能测试等。</li><li>编写测试用例：对于每个测试，编写一个详细的测试用例。这应该包括预期的输入，预期的输出，以及如何执行测试。</li><li>评审测试用例：对测试用例进行评审，以确保它们完整，准确，并且易于理解。</li></ol><p>复杂任务的拆解往往十分有效，不仅可以提升大模型的推理能力，也可以让大模型的输出更加贴合你的要求（对齐），但这需要你对当前任务有一定的理解，才可以完成这样的拆分。但如果你并不熟悉你要处理的任务，如何完成这一步呢。正如前文中表达的观念，我们希望得出一套通用的方法，让每个人在面对每个任务时都可以完成 Prompt 的编写，因此一定需要找到更加通用的方法。</p><p><strong>其实，这个步骤你完全可以让大模型帮助你完成，</strong>这类似 Agent 中的 Planning 的思想，让大模型帮助你拆分一项复杂任务。你可以使用这样简单的 Prompt 完成这个任务：</p><p><strong>任务拆分 Prompt：</strong> <code>&#123;&#123;你要做的任务&#125;&#125;</code>，需要哪些步骤，该如何思考？</p><p><strong>例：希望大模型帮我写一份基金财务分析报告</strong> <strong>输入：</strong> 制作一份基金财务分析报告，需要哪些步骤，该如何思考？ <strong>输出：</strong> 制作一份基金财务分析报告是一个涉及多个步骤的过程，需要对基金的财务状况、投资策略、市场环境等进行深入的研究和理解。以下是一些主要步骤和思考方式：</p><ol><li>收集数据：首先，你需要收集基金的财务数据，包括但不限于基金的净值、收益率、投资组合、费用比率等。这些数据通常可以从基金公司的年度报告或季度报告中获取。</li><li>数据分析：对收集到的数据进行分析，包括对基金的收益率、风险、投资组合分布等进行计算和比较。你可以使用一些财务分析工具，如 Excel，或者专门的财务分析软件来进行这些计算。</li><li>基金比较：将基金的表现与其同类基金或者基准指数进行比较，看看基金的表现是否超过市场平均水平。这可以帮助你理解基金的相对表现。</li><li>市场环境分析：考虑基金的投资环境，包括经济状况、行业趋势、政策变化等。这些因素可能会影响基金的表现。</li><li>基金经理分析：研究基金经理的投资策略和历史表现，看看他们是否有能力在不同的市场环境下取得良好的回报。</li><li>撰写报告：将你的分析结果整理成一份报告，包括你的主要发现、基金的优点和缺点、以及你对基金未来表现的预测。</li></ol><p>在进行这些步骤时，你需要保持客观和批判性的思考。不要只看基金的过去表现，而要尝试理解基金的表现背后的原因。此外，你还需要考虑到市场的不确定性，因此在做出预测时要谨慎。</p><h4 id="补要求"><a href="#补要求" class="headerlink" title="补要求"></a>补要求</h4><p>以上我们已经通过 “述问题&amp;定目标” 描述清楚了我们的任务，下面我们往往还需要对我们的任务提出一些要求，告诉大模型希望他做什么以及不做什么，这往往与模型在应用中的准确率息息相关。我们常用的要求可能有如下几种：</p><ol><li>字数限制。</li><li>输出结构（结构化输出，Json 输出）。</li><li>在输出中排除 xxx。</li><li>在输出中仅包含 xxx。</li></ol><p>让大模型遵循我们的要求，尤其是在“格式”层面让大模型的输出符合我们的规定，对大模型的工业应用十分重要。如何让大模型更听话，让其遵循我们的要求呢？</p><p><strong>首先，我们可以把要求放在 Prompt 的最后。</strong>大语言模型的本质是在做文本补全，后文的输出会更倾向于依据距离更近的语境，如果利用 <strong>“LIME”</strong> 这样的模型解释算法分析，距离更近的文本间权重往往更大，这在 Transofrmer 中的 Attention 权重 上也可以清晰的看到。同时，这与大模型在预训练阶段中完成的任务也更加匹配，虽然现在的大模型在 SFT 阶段会进行多种任务的训练，但其本质上还是建立在自监督“文本补全”任务上被训练出来的，因此其天然的更加遵从离得更近的文本。因此，把要求放在 Prompt 的最后可以很有效的帮助大模型变得更“听话”。</p><p><strong>其次，我们还可以利用大模型的“编程”能力巧妙的让他更“听话”。</strong>在“立角色”的部分中，我们说“角色”时大模型的能力包，我们可以通过设定角色调用大模型的能力，那有什么能力可以让大模型更“听话”呢？我们都知道“大模型”在“编程”方面也展现出了惊人的能力，而这个能力恰好可以将“模糊的文理问题”变成“准确的数理问题”，以此让大模型更加遵守我们的要求。</p><p>具体而言，就是把我们的要求转换为一个 “编码” 任务，例如：</p><p><strong>请列出10个国家，并以列表形式返回</strong></p><p>请列出10个国家，并以列表形式返回。我需要将这个列表引入到 python 代码中，请严格遵守 python 列表的格式进行输出。</p><p><strong>例2：请输出10个国家，并包含这10个国家的“名称”，“人口”，“位置”。</strong></p><p>请列出10个国家，并包含这10个国家的“名称”，“人口”，“位置”。我需要将这份数据引入到 python 代码中，因此请以 Json 格式进行输出，Json 格式如下：</p><p>‘’’</p><p><code>&#123;&quot;name&quot;: 名称, &quot;population&quot;: 人口, &quot;position&quot;: 位置, &#125;</code></p><p>‘’’</p><p><strong>例3：请为我输出一份产品摘要，字数不要超过50个字。</strong></p><p>请为我输出一份产品摘要。我需要将这个摘要引入到 python 代码中，该变量的大小为50，因此摘要内容不要超过50个字符通过这样引入大模型“编程”能力的方式，我们可以对模型提出更加精准的要求，并通过将我们的任务转换为更加准确的编程问题的方式，让大模型更 “听话”。</p><h4 id="（补充）格式很重要"><a href="#（补充）格式很重要" class="headerlink" title="（补充）格式很重要"></a>（补充）格式很重要</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">除了输入的内容外，输入的格式也很重要，清晰的结构对大模型的效果有很大的影响。除了增加合适的 “空行” 让结构变的清晰外，我们还可以增加一些“标识符”来区分各个部分，例如：#,&lt;&gt;,&#96;&#96;&#96;,[],-。同时大模型也具备 MarkDown 解析的能力，我们也可以借助 MarkDown 语法进行 Prompt 结构的整理。</span><br><span class="line"></span><br><span class="line">由于“格式”对模型效果的影响，越来越多研究聚焦在了这个方向上，其中 “LangGPT” 得到了广泛的应用。LangGPT 提出了一种结构化的 Prompt 模式，可以通过一套结构化的模版构造出格式清晰的 Prompt。</span><br><span class="line"></span><br><span class="line">例：LangGPT 示例</span><br><span class="line"></span><br><span class="line"># Role: 设置角色名称，一级标题，作用范围为全局</span><br><span class="line"></span><br><span class="line">## Profile: 设置角色简介，二级标题，作用范围为段落</span><br><span class="line"></span><br><span class="line">- Author: yzfly 设置 Prompt 作者名，保护 Prompt 原作权益 </span><br><span class="line"></span><br><span class="line">- Version: 1.0 设置 Prompt 版本号，记录迭代版本 </span><br><span class="line"></span><br><span class="line">- Language: 中文 设置语言，中文还是 English </span><br><span class="line"></span><br><span class="line">- Description: 一两句话简要描述角色设定，背景，技能等</span><br><span class="line"></span><br><span class="line">### Skill: 设置技能，下面分点仔细描述</span><br><span class="line"></span><br><span class="line">1. xxx </span><br><span class="line"></span><br><span class="line">2. xxx</span><br><span class="line"></span><br><span class="line">## Rules 设置规则，下面分点描述细节</span><br><span class="line"></span><br><span class="line">1. xxx </span><br><span class="line"></span><br><span class="line">2. xxx</span><br><span class="line"></span><br><span class="line">##Workflow 设置工作流程，如何和用户交流，交互</span><br><span class="line"></span><br><span class="line">1. 让用户以 &quot;形式：[], 主题：[]&quot; 的方式指定诗歌形式，主题。 </span><br><span class="line"></span><br><span class="line">2. 针对用户给定的主题，创作诗歌，包括题目和诗句。</span><br><span class="line"></span><br><span class="line">##Initialization 设置初始化步骤，强调 prompt 各内容之间的作用和联系，定义初始化行为。 </span><br><span class="line"></span><br><span class="line">作为角色 &lt;Role&gt;, 严格遵守 &lt;Rules&gt;, 使用默认 &lt;Language&gt; 与用户对话。然后介绍自己，并告诉用户 &lt;Workflow&gt;。</span><br><span class="line"></span><br><span class="line">我们从 “LangGPT” 的示例中可以看到，他用各种分隔符对 Prompt 内容进行了整理，可以很清晰的看到每部分的作用与区分。我们可以借鉴 “LangGPT” 对分隔符的使用，通过对格式的整理让同样的 Prompt 展现出更好的效果。</span><br></pre></td></tr></table></figure><h4 id="总结（框架）"><a href="#总结（框架）" class="headerlink" title="总结（框架）"></a>总结（框架）</h4><p><strong>我们把 “框架细化” 分成了4步，并在每一步中都提出了通用的实践方法：</strong></p><ol><li>角色：通过角色模版和招聘 JD 补全角色。</li><li>问题&amp;目标：在大模型的辅助下拆分任务。</li><li>要求：借助编码能力，让大模型更好的遵守要求。</li><li>格式整理：结合 LangGPT 的思想合理应用分隔符，让 Prompt 结构清晰。</li></ol><p><strong>至此，我们已经完成了 Prompt 主体部分的编写，</strong>面对任何一个任务都可以通过这套统一的方法完成一个还不错的 Prompt，并且通过我们对 Prompt 结构化的拆分，我们现在也可以更好的管理我们的 Prompt，并为上层应用提供更好的支撑。</p><h3 id="在框架上增加更多信息（RAG）"><a href="#在框架上增加更多信息（RAG）" class="headerlink" title="在框架上增加更多信息（RAG）"></a>在框架上增加更多信息（RAG）</h3><p><img src="/2024/08/15/prompt-engineering/5b2dffd775e246e0958b502553ce5f01.png" alt="img" loading="lazy"></p><p>上文中我们已经通过 “Prompt 框架” 和 “框架的细化” 完成了 Prompt 主体部分的编写，如果我们要在这基础上进一步优化我们的 Prompt，我们还能怎么做呢？</p><p>大模型的推理，根本上还是基于用户输入的信息进行推理，我们提供的信息越充分，大模型就能越好的完成推进。<strong>因此，要想让模型的效果更好，我们就需要提供更多的输入信息。</strong>前两章介绍的“框架”，仅仅包含了 Prompt 中“静态”的信息，再进一步扩充这部分信息的同时，我们还需要增加因任务而异的“动态”信息，这两部分信息的补充就是进一步优化 Prompt 的核心思想。</p><p>“增加更多信息，让效果变得更好” 这个想法十分自然，但我们要增加什么信息？如何增加这些信息呢？</p><p>为了能在合适的场景下增加合适的信息，势必要包含 “检索” 的工作，来根据需要找到合适的信息，而说到 “检索” 就不得不提名声大噪的 “RAG” 了。</p><h4 id="RAG"><a href="#RAG" class="headerlink" title="RAG"></a>RAG</h4><p>RAG 技术在近期得到了大量的关注，也渐渐的在各种实际场景中得到了应用。早在 ChatGPT 爆发之初，RAG 就已经得到了不少的关注，大家很早就意识到，<strong>想要依赖模型参数注入知识不是可行的做法，要让模型拥有动态获取知识的能力，</strong>不光对大模型在专业领域中的应用十分重要，对知识的扩展性和时效性在通用领域中也同样重要。</p><p>与人类智能类比，人脑也并不需要把所有知识都放在大脑中，而是可以通过检索的方式获取知识，再利用自身的智能进行推理，最终得到结论。当你使用各大厂商的大模型时，你都会发现其包含检索的步骤，<strong>通过检索获取的知识对大模型效果十分重要。</strong></p><p><img src="/2024/08/15/prompt-engineering/a0f3e6ab9c5d23dda817a73fce581231.png" alt="img" loading="lazy"></p><p><strong>而这个检索背后的技术就是 “RAG”，</strong>他可以利用大模型能力通过语义相似度的方式，高效的在文本数据上完成检索，并把其增加到大模型的输入当中。</p><p><img src="/2024/08/15/prompt-engineering/df5472e8de75f5eb55b24786278bf75c.png" alt="img" loading="lazy"></p><p>从技术角度看，上图是 RAG 最原始的结构，也是 RAG 最核心的部分，通过 “Embedding+<a href="https://cloud.tencent.com/product/vdb?from_column=20065&from=20065">向量数据库</a>” 的方式，RAG 可以无监督的对文本数据进行语义维度的匹配，这个思想早在 Word2Vec 时代就已经得到了应用，词向量就已经可以进行“词”维度的匹配，而如今大模型则是把这个维度提升到了所有文本数据。</p><p>现在已经有了许多可以直接使用的RAG框架，如：LangChain, Milvus, LlamaIndex, Pincone 都提供了开箱即用的方案。而真的要让 RAG 变得准确好用，还是有很多值得优化的地方，RAG 框架也已经有了多种优化版本。</p><p><img src="/2024/08/15/prompt-engineering/7ce1b828fe0d5ce0d6a9c29c1e1b9198.png" alt="img" loading="lazy"></p><p>如今的 RAG 技术已经得到了充分的发展，已经不仅仅局限于语义匹配本身，而诞生出了多种优化版本，也增加了例如 “Rewrite”,  “Memory” 这样的模块，对于 RAG 技术感兴趣的同学可以阅读此篇survey：<a href="https://arxiv.org/pdf/2312.10997">https://arxiv.org/pdf/2312.10997</a></p><p><strong>如果我们从应用角度重新看看 RAG ，不难发现其本质就是检索技术，</strong>只是 RAG 利用大模型能力实现了更强的语义维度的检索。而如果我们不知道怎么做 Embedding，也没有向量<a href="https://cloud.tencent.com/solution/database?from_column=20065&from=20065">数据库</a>，不会使用 RAG，我们还可以完成检索吗？</p><p>答案显然是肯定的 ，检索依然是十分成熟的技术模块了，即便利用最传统的 “关键词匹配” 也可以计算文本间的相似度，实现检索的效果。<strong>因此，RAG 并不是唯一的技术方案，我们不必困在此处，在条件不足的情况下，我们可以结合场景找到最合适的检索模式，践行 RAG 的思想，在输入中增加更多信息才是最核心的思想。</strong></p><p>以上，我结合 RAG 介绍了 “如何增加信息？”，下面我就具体展开 “我们要增加什么信息？”。</p><h4 id="示例（Few-shot）"><a href="#示例（Few-shot）" class="headerlink" title="示例（Few-shot）"></a>示例（Few-shot）</h4><p><img src="/2024/08/15/prompt-engineering/95d775f97b247004730d2f3ff799171a.png" alt="img" loading="lazy"></p><p>Few-shot 是无监督学习的一种基本范式，相较于直接提问的方式，One-shot 会提供一条示例，Few-shot 会提供多条量示例再进行提问，以此提升模型的效果。这种提供示例的方法，在不进行专项训练的情况下可以很好的提升模型的准确性和稳定性，在各类大模型的论文中也可以看到这样的对比，在各类任务中均可以表现出更好的效果。</p><blockquote><p>注：Zero-shot、one-shot、few-shot是机器学习和人工智能领域中用来描述模型在面对未见过的任务或数据时的泛化能力的概念。它们通常用于分类任务，尤其是在自然语言处理（NLP）领域。以下是每个术语的定义和区别：</p><ol><li><strong>Zero-shot Learning (零样本学习)</strong>:<ul><li>在零样本学习场景中，模型在没有看到任何特定类别的样本的情况下，尝试对新的类别进行分类或识别。这通常依赖于模型在训练阶段获得的丰富知识，以及在测试时对类别的描述或标签的理解。</li><li>例如，如果一个模型在训练时学习了多种动物的特征，而在测试时遇到了一个全新的动物类别，零样本学习的目标是让模型能够识别并分类这个新类别，即使它从未见过这个类别的样本。</li></ul></li><li><strong>One-shot Learning (单样本学习)</strong>:<ul><li>单样本学习是指模型在给定一个类别的一个样本后，能够对该类别的新样本进行分类或识别。这要求模型能够从极少的样本中快速学习并泛化到新情况。</li><li>例如，如果模型在训练时学习了多种动物的特征，而在测试时每个新类别只给定了一个样本，单样本学习的目标是让模型能够识别这个新类别的其他样本。</li></ul></li><li><strong>Few-shot Learning (少样本学习)</strong>:<ul><li>少样本学习介于零样本学习和单样本学习之间，模型在给定一个类别的少量样本（通常大于1但远小于传统训练所需的样本数量）后，尝试对新样本进行分类或识别。</li><li>例如，如果一个新类别给定了5个样本，少样本学习的目标是让模型能够利用这5个样本来识别和分类这个类别的其他新样本。</li></ul></li></ol><p><strong>区别</strong>:</p><ul><li><strong>样本数量</strong>：这是三者最直观的区别。零样本学习不需要任何特定类别的样本，单样本学习需要一个样本，而少样本学习需要多个样本，但数量有限。</li><li><strong>泛化能力</strong>：零样本学习要求模型具有极高的泛化能力，因为它没有任何特定类别的样本。单样本学习和少样本学习的泛化能力通常介于传统学习（大量样本）和零样本学习之间。</li><li><strong>应用场景</strong>：零样本学习适用于类别非常广泛且模型需要在没有额外训练数据的情况下进行分类的情况。单样本学习和少样本学习适用于数据稀缺的情况，或者在需要快速适应新类别的场景。</li></ul></blockquote><p><img src="/2024/08/15/prompt-engineering/20240730-5ac2bad4.png" alt="img" loading="lazy"></p><p>对于 Few-shot 而言，最为人诟病的一点就是，当你提供示例后，<strong>模型会更多的参照示例回答，而在某种程度上降低了模型本身的思考能力。</strong>Few-shot中的示例很大程度提升了模型结果的确定性，而确定性会影响模型展现出的智能水平，特别是对于基于表征学习的大语言模型（Certainty or Intelligence: Pick One!，Yann Le Cun）。</p><p>我们应该如何缓解这个弊端呢？除了通过Prompt对模型进行引导外，<strong>让示例变得 “少而有效” 也是很好的方式，</strong>通过提供更具参考性的示例，提升每条示例的价值，同时降低示例的数量，可以有效的减少大模型的确定性，并通过这种方式尽量减少示例带来的负面影响。</p><p><strong>为了达到 “少而有效” 的效果就需要借助 “RAG” 的方式完成。</strong>通过提升检索的效果，我们可以更精准的找到与当前任务最相近的示例（或反例），相比静态的示例而言，这可以很大的增强模型对当前任务的理解，以此提升模型在专项任务中的效果。</p><h4 id="记忆（Memory）"><a href="#记忆（Memory）" class="headerlink" title="记忆（Memory）"></a>记忆（Memory）</h4><p>除了在输入中增加 “示例” 外，<strong>我们还可以增加“历史记录”，为大模型增加 “记忆（memory）” 。</strong>“记忆” 可以弥补大模型在知识整合和长期记忆方面存在的明显短板，而这恰恰是人脑的强项。人脑能持续不断地整合知识，形成强大的长期记忆，为我们的思考和决策提供支持。</p><p><strong>在一次对话内的上下为可以被称作“短期记忆”，而对于历史的对话内容则可以被称为“长期记忆”，</strong>在适当的场景调用这些记忆，可以为当前的对话补充必要的上下文，让模型了解更多必要的背景信息，已在当前任务中表现的更好。这种打破 “上下文长度限制” 的方式，不光在专项任务中发挥效果，在更长的生命周期上，让模型可以调度历史的“对话内容”也被认为是模型不断进化的方式之一。</p><p><img src="/2024/08/15/prompt-engineering/5ae11b418502d20e795ceb495a3546dc.png" alt="img" loading="lazy"></p><p>例如，在上图的例子中，当大模型进行电影推荐任务时，会调取历史记忆，确定用户倾向的电影类型和看电影的时间，这些信息会在模型推理的过程中被加入到输入中，以此推荐出更符合预期的结果。</p><p><img src="/2024/08/15/prompt-engineering/373c78620c005dbe8e4da20c0fae8e14.png" alt="img" loading="lazy"></p><p><strong>我们可以根据每一轮对话的输入，利用“RAG”技术，动态的从记忆库中获取合适的内容加入到输入中，让大模型可以跨任务，跨周期的进行历史数据的获取。</strong>这在通用领域可以进行知识的打通，建立知识间的关联，在专业领域中面对 “专业概念/专业词汇” 时，除了依赖人工对专业知识的整理，历史数据中沉淀的专业知识也是十分有效的信息，通过历史数据的引入排除对人工的依赖，在使用过程中不断提升模型对专业知识的理解，这也是很多论文中提到的“通过长期记忆让模型自我进化”的思想。</p><p><strong>“记忆” 是十分重要的大模型推理模块之一，在 Agent 建设中也扮演了重要的角色，</strong>相关的研究还在不断发展，记忆管理框架（MemGPT）也在工业中得到了越来越广泛的应用，诞生了许多令人印象深刻的记忆框架。</p><p>例如，来自俄亥俄州立大学和斯坦福大学的科学家们给出了一项有趣的研究，希望让人工智能拥有一个类似人类海马体的”记忆大脑”。从神经科学的角度出发，模仿人脑海马体在长期记忆中的作用，设计出一个名为 HippoRAG 的模型，能够像人脑一样高效地整合和搜索知识。</p><p><img src="/2024/08/15/prompt-engineering/20240730-6ba8fb24.png" alt="img" loading="lazy"></p><p>他们利用大语言模型处理信息，并用一个知识图谱来充当“记忆索引”，引入了检索模型来连接语言模型和知识图谱。当模型接收到一个新的查询时，它先从查询中提取关键概念,然后在知识图谱上应用 “Personalized PageRank” 算法进行概念扩展和检索，模拟海马体的联想记忆能力。最后，模型根据节点的重要性对 passage 进行排序和检索，进行“模式补全”。实验表明，这个“记忆大脑”能够在多跳问答等需要 “知识整合” 的任务上取得大幅提升。</p><p><img src="/2024/08/15/prompt-engineering/c4182cbdf8b67c3dced91e76d98e1a47-172369308945520.png" alt="img" loading="lazy"></p><h4 id="应对专业领域"><a href="#应对专业领域" class="headerlink" title="应对专业领域"></a>应对专业领域</h4><p><strong>大模型擅长回答通用的知识，但对于专业领域内的知识就显得没那么擅长，</strong>而对于大模型的工业应用而言，我们往往要处理某个专业领域内的专项任务，这需要大模型理解必要的专业知识和专业方法，并在合适的时候调度它们，以此在工业应用中取得稳定的效果，这也成为了大模型应用最大的问题之一。</p><p><strong>专业领域知识的增加对大模型在专业领域上的应用效果至关重要，</strong>以我们近一年应用大模型在“测试领域”的实践为例，我们希望大模型帮助测试同学完成测试工作，例如 “编写/检查” 测试用例。</p><p>要完成这样一个相对专业的领域任务，就需要大模型了解足够的领域知识，例如测试用例的检查标准，常用的测试方法，各类用例设计方法，以及必要的业务背景知识。为了能让大模型具备这些支持，我们首先需要与领域专家协作，<strong>对测试域相关的知识进行整理，管理好这些知识是大模型应用的基础。</strong></p><p><img src="/2024/08/15/prompt-engineering/4df89c00818c8ca8517807d5285a6e6a.png" alt="img" loading="lazy"></p><p>同时，专业领域的知识与具体任务息息相关。例如，对 “用例检查” 任务而言，我们的目的是通过用例检查发现用例中存在的问题，以此减少用例原因导致的漏测问题。因此，我们从目的出发，对漏测问题进行分析，在确定检查点的同时，结合用例现状和专业知识进行了问题定义的梳理，<strong>通过明确问题定义让大模型更好的贴合我们的专业领域。</strong></p><p>除了上述这些对专业知识的整理，我们还希望动态的增加这些信息，<strong>利用 RAG 的方法，结合具体任务动态的从知识库中引入必要的知识。</strong>例如，当用户的输入中包含某些专业词汇或业务概念时，我们需要动态的识别到他们，并对他们进行解释和补充，这可能需要利用 “插件” 完成，关于“插件”的相关内容我会在“Agent”相关的文章中具体展开，此处不再赘。</p><p>无论是 “静态知识” 还是 “动态知识”，都是通过对专业知识的整理，弥补大模型在专业领域上的不足，<strong>我们要将”专业知识“翻译成”通用知识“ 告诉模型大模型，让大模型更好的应对专业领域。</strong>这一步往往需要领域专家的介入以及对知识的人工整理，这往往是决定大模型效果上限最重要的因素之一。</p><h4 id="总结（增加更多信息）"><a href="#总结（增加更多信息）" class="headerlink" title="总结（增加更多信息）"></a>总结（增加更多信息）</h4><p><img src="/2024/08/15/prompt-engineering/d677c868df307a6fd1ba97ccf74ed40b.png" alt="img" loading="lazy"></p><p>本章，我们通过进一步增加信息的方式提升模型的效果，并通过两个问题分析了增加信息的方式：</p><ol><li>如何增加信息：RAG，或其他检索方式。</li><li>增加什么信息：<ul><li>示例（Few-Shot）</li><li>历史记录（记忆）</li><li>专业知识，领域知识，业务知识</li></ul></li></ol><p>我们通过框架和额外信息的增加，在输入层面上完成了 Prompt 的调试，接下来就需要让模型根据我们的输入进行推理，而推理本身的效果也是影响模型效果很重要的因此，下面就来展开谈谈，如何在输入的基础上提升模型的推理能力。</p><h3 id="让大模型更好的思考（CoT）"><a href="#让大模型更好的思考（CoT）" class="headerlink" title="让大模型更好的思考（CoT）"></a>让大模型更好的思考（CoT）</h3><h4 id="什么是-CoT"><a href="#什么是-CoT" class="headerlink" title="什么是 CoT"></a>什么是 CoT</h4><p>2022 年，在 Google 发布的论文《Chain-of-Thought Prompting Elicits Reasoning in Large Language Models》中首次提出，通过让大模型逐步推理，<strong>将一个复杂问题分解为若干个子问题，并一步一步的进行推理，</strong>通过这种方式可以显著提升大模型的性能。这种推理方法就被称为思维链（Chain of Thought）。</p><p><img src="/2024/08/15/prompt-engineering/20240730-0bf85d87.png" alt="img" loading="lazy"></p><p>区别于传统 Prompt 通过控制输入直接端到端的得到输出，即<code>input ——&gt; output</code> 的方式，<strong>CoT 完成了从输入到思维链再到输出的映射，</strong>即<code>input——&gt; reasoning chain ——&gt; output</code>。</p><p>自 CoT 问世以来，CoT 的能力已经被无数工作所验证，如下图所示，可以看到，相较于直接 Prompt， CoT 对所有的推理任务都带来了显著的提升</p><h4 id="CoT-的实现"><a href="#CoT-的实现" class="headerlink" title="CoT 的实现"></a>CoT 的实现</h4><p><img src="/2024/08/15/prompt-engineering/20240730-5a758070.png" alt="img" loading="lazy"></p><p>上图展示了几种不同范式下对CoT的实现。<strong>对于 Zero-Shot 而言</strong>只需要简单的一句 “Let’s think step by step” 就可以让模型一步步思考；<strong>对于 Few-Shot 而言，</strong>除了在提问时引入分步的思想，还提供了逐步思考的示例，不仅可以让大模型分步思考，还可以通过示例告诉大模型应该如何分步；<strong>对于 Agent 而言，</strong>我们不光通过修改输入的方式实现 CoT，而是人为的对任务进行拆分，并通过多轮对话的方式将 CoT 引入到建模过程当中，实现整体任务维度的 CoT。</p><p>如上图所示，CoT 的构造主要以线性为主，对任务进行线性拆分，并按先后顺序以此执行。而随着 CoT 相关研究的不断发展，<strong>思维链的形式不仅仅局限在线性的形式，而是衍生出了树状，表状，图状等多种类型，</strong>其中代表工作有 PoT，Tab-CoT，ToT，GoT-Rationale 等等，下图清晰的展示了这几种方法的异同：</p><p><img src="/2024/08/15/prompt-engineering/1003cf821b7453e8455a51ffa1c5af07.png" alt="img" loading="lazy"></p><h4 id="CoT-的应用"><a href="#CoT-的应用" class="headerlink" title="CoT 的应用"></a>CoT 的应用</h4><p>CoT 的本质是将一个高度不确定的复杂任务，拆分成若干个确定性较高的子任务，以此提升整个系统的效果和确定性。从 “zero-shot”  和  “few-shot” 范式中，CoT 这是一种推理技巧，而从 “Agent” 范式看，CoT 则更像一种建模思路，这也是 CoT 更核心的思想。当我们面对一个复杂任务时，仅对输入进行改造是不够的，我们还需要进行任务维度的分解，用 CoT 的方式进行建模。</p><p>例如，如果我需要大模型帮我完成一篇文章，我有两种做法：</p><ol><li>输入信息 - 输出文章。</li><li>输入信息 - 输出大纲 - 完善大纲内容 - 依据要求进行调整 - 输出文章。</li></ol><p>这个例子只是一个简单的拆分，但也能在效果上得到很大提升。下面举一个我们实际工作中的例子，我们希望大模型帮助测试同学编写“测试用例”，对于这个任务而言，最直观的做法就是把 “需求” 做为输入，让大模型根据需求进行测试设计，生成“测试用例”，而需求的复杂程度和不确定性对任务造成了极大的阻碍，因此我们引入 CoT 的思想对任务进行了拆分。</p><p><img src="/2024/08/15/prompt-engineering/76b17aca038cd54ebb6ae3cb75940449-172369522783228.png" alt="img" loading="lazy"></p><p><strong>如上图所示，我们将这个复杂任务拆分成了3个阶段</strong>（实际上每一阶段又会拆分正若干个子步骤）。<strong>首先对需求进行分析，</strong>整理需求内容，并从需求中抽取功能点及测试对象；<strong>然后基于这些功能点进行用例设计，</strong>编写用例集的整体结构，以及每条用例的测试点，即用例标题；<strong>最后对用例进行补全，</strong>根据需求和用例标题编写用例的步骤和预期结果。我们通过这种方式，将任务分为了3个阶段，无论是从“研发”还是从“应用”角度都为我们的任务带来了极大的帮助。</p><p><strong>从“研发”角度看，</strong>当我们把一个任务分解为多个阶段后，我们很容易的可以找到其中 “最简单” 的阶段。例如，在上图的链路中，对需求的分析相对困难，而 “根据标题生成步骤” 则相对简单，<strong>以此做为切入点可以在前期为我们避免最复杂的“需求”数据，让我们可以快速达到可应用的效果。</strong>这种研发思路并非仅对这个任务有效，对于前文中提到的 “文章编写” 的例子，“输出大纲” 和 “依据要求进行调整” 显然是更简单的子任务，率先在从这些点切入，也可以帮我们更快的取得成效。</p><p><strong>从“应用”角度看，</strong>即便大模型展现出了极为惊艳的效果，但在应用中的短板也十分明显，大家也逐渐看到了大模型能力的限制。基于对现有模型能力的判断，“人机协同（copilot）” 被越来越多人认为是更好的方式。而 “人机协同” 是一个共同生产的过程，如果大模型仅仅是端到端的完成一个任务，人很难介入的，而当我们进行了任务维度的拆分后，每一个子任务都可以与人协同。例如，在“用例生成”中，人可以先对需求进行分析，再让大模型进行用例设计，<strong>通过这种人机协同的应用模式，我们可以让大模型在应用中更快速的落地。</strong></p><h3 id="附加技巧"><a href="#附加技巧" class="headerlink" title="附加技巧"></a>附加技巧</h3><p>前文中，我们已经介绍了 Prompt 调试的主要步骤，也是一条标准的工作流，可以帮助我们从 0 到 1 的完成 Prompt 的编写和调试：**<code>“Prompt 框架” - “细化框架” - “增加更多信息” - “CoT”</code>。**而正如开篇时提到的，Prompt 相关的技巧已多如牛毛，并且一直随着模型的迭代而不断更新，我们前文中讲的是 “Prompt 工程” 的主要步骤和思想，而在其之上，还是有不少技巧可以进行进一步的优化，下面我选择其中最重要的几点展开聊聊。</p><h4 id="用参数控制模型确定性"><a href="#用参数控制模型确定性" class="headerlink" title="用参数控制模型确定性"></a>用参数控制模型确定性</h4><p>除了调整模型的输入外，大家一定注意到了大模型还有2个参数可以调节：**<code>温度（Temperature)</code><strong>,</strong><code>Top-P</code><strong>。</strong>这两个参数也与大模型效果息息相关，**控制着大模型输出的确定性。大模型的本质是在 Token 的概率空间中进行选择，依据概率选择接下来要输出的 Token，而这 2 个参数就是在控制这个过程。</p><p><strong>Temperature（温度）</strong>是一个正实数，用于控制生成文本的随机性和多样性。在生成过程中，模型会为每个可能的下一个词分配一个概率，而调整温度，<strong>则可以影响这些概率分布的形状。当温度接近 0 时，</strong>输出文本会变得更加确定，模型更倾向于选择具有较高概率的词，这可能导致生成的文本质量较高，但多样性较低。<strong>当温度接近 1 时，</strong>输出文本的随机性增加，模型会更平衡地从概率分布中选择词汇，这可能使生成的文本具有更高的多样性，但质量可能不如较低温度时的输出。温度大于 1 时，输出文本的随机性会进一步增加，模型更可能选择具有较低概率的词。</p><p><img src="/2024/08/15/prompt-engineering/7a40c4ccb1582de110ae8cbe113f2f9a.png" alt="img" loading="lazy"></p><p><strong>Top-p</strong> 是一个 0 到 1 之间的实数，表示另一种生成策略，它根据概率分布的累积概率来选择候选词。具体来说，模型将根据词汇的概率对其进行排序，然后选择一个子集，<strong>使得这个子集的累积概率至少为 p。当 p 接近 1 时，</strong>生成的文本将包含几乎所有可能的词汇，导致较高的随机性和多样性。<strong>当 p 较小时，</strong>生成的文本将仅包含具有较高概率的词汇，降低随机性并提高输出质量。然而，过低的 p 值可能导致模型过于保守，生成的文本过于重复或单调。</p><p>为了了便于理解，我们可以举一个抽象的例子，帮助大家理解。假设我们有一个语言模型，它正在预测句子中的下一个单词。我们输入的句子是**<code>我喜欢吃苹果和____</code><strong>，那么模型可能会为</strong><code>香蕉</code><strong>分配 0.4 的概率，为</strong><code>橙子</code><strong>分配 0.2 的概率，为</strong><code>鸭梨</code><strong>分配 0.2 的概率，为</strong><code>白菜</code><strong>分配 0.1 的概率，为</strong><code>萝卜</code>**分配 0.1 的概率。</p><p><img src="/2024/08/15/prompt-engineering/a8a24d0c38aaa4430f61e5a9be9a2c2b.png" alt="img" loading="lazy"></p><p>假如我们设定**<code>Top-P = 0.8</code>**，则我们会按照概率大小选择尽可能多的词，并让概率的总和小于0.8。因此我们会选择 “香蕉”，“橙子”，“鸭梨”，而如果再加上 “白菜” 则累计概率会超过阈值 0.8。</p><p>最后模型会在 “香蕉”，“橙子”，“鸭梨” 中随机选择一个单词。在这个例子中，我们有 50% 的几率会选择 “香蕉”，25% 的几率选择 “橙子”，25% 的几率选择 “鸭梨”。这一步中的概率还会被 “Temperature（温度）” 所影响。</p><p><strong>总结而言，温度（Temperature）和 Top-p 是对模型输出确定性的控制，</strong>我们可以根据具体的应用场景进行调试，当我们需要模型确定稳定的产出结果是，我们可以设置更高的确定性，以提升模型应用的稳定性。但当我们需要模型提供多种结果，或希望让模型更具想象力时，我们则需要设置更高的多样性。</p><h4 id="让大模型帮你优化-Prompt"><a href="#让大模型帮你优化-Prompt" class="headerlink" title="让大模型帮你优化 Prompt"></a>让大模型帮你优化 Prompt</h4><p>我们可以使用各种技巧优化我们的 Prompt，<strong>那大模型可不可以帮我们自动优化我们的 Prompt 呢？</strong>这个研究方向自 ChatGPT 以来就一直得到大量关注，且在大模型时代得到了越来越多的应用，<strong>他不光可以对已有的 Prompt 进行优化，还可以自动找到一些 Prompt 语句，</strong>神奇的产生通用的效果。例如，在 “Zero-Shot COT” 里的那句 “Let’s think step by step”，谷歌就曾通过这种方式找到了更好的一句：“Take a deep breath and work on this problem step-by-step”，让GSM8K的结果直接从 71.8% 上升到了 80.2%。这个研究方向还在快速的发展当中，已经诞生了多种算法，下文将挑选其中最经典的几个算法，希望可以让大家更好的了解这个领域。</p><p><strong>APE 是其中最经典的算法，</strong>核心思路是：从候选集中选出若干较好的 Prompt，再在这些 Prompt 附近进行 “试探性搜索”。其过程为，先通过大模型生成若干 Prompt，再在训练集上打分，保留较好若干条的 Prompt，最后在这些高分 Prompt 附近进行采样，模拟 “Monte-Carlo Search” 的过程，优化得到最理想的 Prompt。</p><p><img src="/2024/08/15/prompt-engineering/20240730-2427c13c.png" alt="img" loading="lazy"></p><p>APO 算法则是引入了 “梯度下降” 的方法，通过训练集得到当前 Prompt 的梯度，在应用“梯度下降”的方式得到新的 Prompt，最后与 APE 一样进行采样，得到最终的 Prompt。</p><p><img src="/2024/08/15/prompt-engineering/938f3595f871470b33fca4c692b43e12.png" alt="img" loading="lazy"></p><p>OPRO 算法则是更复杂的利用 LLMs 作为优化器。与传统的迭代优化技术不同，OPRO 采用自然语言描述和指引优化任务，通过 LLMs 的指导，结合先前找到的解决方案，不断生成更新的策略。</p><p><img src="/2024/08/15/prompt-engineering/89b57678a343c7b46b0ca352eb9e7cfc.png" alt="img" loading="lazy"></p><h4 id="更多技巧"><a href="#更多技巧" class="headerlink" title="更多技巧"></a>更多技巧</h4><p>如本文开篇提到的，本文尝试结合我们的研发经验，体系化的梳理 “Prompt” 相关工作，尝试用一套通用的框架，对 Prompt 工程的相关工作进行梳理和总结。但也正如本章的用意，<strong>在统一的框架之外还有各种技巧，可以起到锦上添花的作用，</strong>这部分技巧无论是公司内外都积累了很多文章，且由于技巧过多，因此在本文没有展开讨论，此处总结其中的 3 个重要方法，在我们的实践中起到了不小的作用：</p><ol><li><strong>自我一致性：</strong>多让模型输出多个回答，然后在 LLM 的多次回答中选择出现多次的答案。</li><li><strong>反思：</strong>通过让大模型评估自己的输出进行调整，得到更优的输出。</li><li><strong>知识生成：</strong>让大模型生成问题相关的知识，再提出问题，提高大模型回答的准确率。</li></ol><p>对于这部分技巧，如果有机会将用一篇单独的文章介绍，本篇文章不再展开，如果大家对这些方法感兴趣可以学习传播最广的 Prompt 知识库，Prompt Engineering Guid。</p><h3 id="优化方式及常用指标"><a href="#优化方式及常用指标" class="headerlink" title="优化方式及常用指标"></a>优化方式及常用指标</h3><p>本文一直在是希望向大家介绍 “Prompt” 调试的方法，而 “Prompt 调试” 本质上是为了让模型在任务中有更好的效果，而这就涉及到效果的评估，当我们对 “Prompt” 进行了一次更新，我如何判断模型效果是不是变好了呢？对 AI 技术有所了解的同学想必对这部分十分熟悉，但对于没有接触过 AI 技术的同学，还是有必要补充一些和模型调试相关的基本知识，辅助大家更好的完成模型调试的工作。</p><p>要判断大模型的效果，首先需要有数据作为支撑，其次还需要确定衡量效果的指标。计算大模型在测试数据上的指标是判断大模型效果的依据，这里我提供一些常用的指标，用来衡量大模型在各类任务中的效果。</p><p><strong>分类问题</strong></p><ol><li><strong>准确率：</strong>分类正确的样本占总样本个数的比例。</li><li><strong>精确率（Precision）：</strong>又称为查准率，分类正确的正样本占判定为正样本个数的比例。</li><li><strong>召回率（Recall）：</strong>又称为查全率，分类正确的正样本占真正的正样本个数的比例。</li><li><strong>F1 Score：</strong>是精确率和召回率的平衡，最常用的评价指标。</li></ol><p><strong>生成问题</strong></p><ol><li><strong>BLEU：</strong>比较生成数据和标注数据中 n-gram 的重合程度。</li><li><strong>METEOR：</strong>与 BLEU 相比不仅考虑了精确度和召回率，还考虑了生成结果的词序。</li><li><strong>困惑度（Perplexity）：</strong>所有测试样本的交叉熵损失求平均后取指数，用于衡量模型对测试数据的预测能力。困惑度越低，说明模型的预测能力越好。</li><li><strong>采纳率：</strong>对于生成任务而言，往往没有明确的预期结果，更多采用人工采纳比例作为评价指标，更细的可以分为“直接可用率”和“修改后可用率”。</li></ol><p>对于专项任务而言，每个任务在调试前都需要准备自己独立的数据集，包含与每一个输入对应的预期结果，<strong>不同的指标代表用不同方式评估 “预期结果” 和 “实际结果” 的相似度。</strong>而对于一些通用的 NLP 能力而言，<strong>业内也有一些开源数据集，被用于衡量模型各项通用能力的效果（文本摘要，语义理解，对话，e.t.c.）</strong>，如果你正在调试一项通用能力，或没有足够的任务数据，就可以利用这些数据集，我在这里也挑选其中一部分做一个简单的介绍：</p><p><strong>英文数据集</strong></p><ol><li><strong>GLUE Benchmark:</strong> 一个集成了九个独立任务的评估工具，用于测量模型对英文句子的理解能力。它包括语义角色标注(SRL)、自然语言推理(NLI)、语义文本相似性(STS)等任务。</li><li><strong>SuperGLUE Benchmark:</strong> GLUE 的后继者，SuperGLUE 包括更复杂的语言理解任务，如多源自然语言推理、词汇互推任务等。</li><li><strong>SQuAD：</strong>一个用于机器阅读理解的数据集，包含由维基百科文章生成的问题和答案。</li><li><strong>CoQA：</strong>一个对话型问答数据集，用于测试模型在对话环境中的理解能力。</li><li><strong>MNLI：</strong>一个用于自然语言推理(NLI)任务的大规模数据集，包含在多种不同领域和类型的文本中进行推理的任务。</li><li><strong>CommonsenseQA：</strong>一个问题回答数据集，主要测试模型的常识理解能力。</li><li><strong>RACE：</strong>一个阅读理解数据集，包含了从英语考试中提取的大量文章和问题。</li><li><strong>Winograd Schema Challenge：</strong>一个用于测试模型在处理需要常识和推理能力的句子解析问题上的表现。</li><li><strong>GSM8K：</strong>一个小学数学文字题的数据集。该数据集被创建出来，是为了支持回答那些需要多步推理的基本数学问题的任务。</li><li><strong>MAWPS：</strong>一个在线的数学词问题仓库，旨在为评估不同的算法提供一个统一的测试平台。它允许自动构建具有特定特征的数据集，提供了调整数据集的词汇和模板重叠以及过滤来自网上语料库的不合语法问题的工具。</li><li><strong>SVAMP：</strong>一个面向小学级别的数学词问题（MWP）的挑战集。每个 MWP 都包含一个简短的自然语言叙述，描述了世界的状态并提出了一些未知数量的问题。SVAMP 中的例子在解决 MWP 的不同方面测试一个模型，比如问题敏感性和强大的推理能力。</li></ol><p>中文数据集</p><ol><li><strong>ChineseGLUE:</strong> 一个与英文 GLUE 类似的中文 NLP 评估工具，包含了多种中文语言理解任务。</li><li><strong>LCQMC:</strong> 一个大规模的中文问题匹配数据集，主要用于研究和改进中文的问答系统。</li><li><strong>DuConv:</strong> 一个中文<a href="https://cloud.tencent.com/product/tbp?from_column=20065&from=20065">对话系统</a>数据集，用于构建对话系统的中文数据集，其特点是能够产生多轮对话。</li><li><strong>WebQA:</strong>  一个大规模的中文问答数据集，主要包括以自然语言形式提出的问题和对应的答案。</li><li><strong>CMRC 2018:</strong> 一个大规模的中文机器阅读理解数据集，类似于英文的SQuAD。</li></ol><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><img src="/2024/08/15/prompt-engineering/acab3c3c77caad1a862aaa0b64380781.png" alt="img" loading="lazy"></p><p>本文尝试结合我们的研发经验，体系化的对 “Prompt 工程” 的相关工作进行了梳理，得到了一个标准化的工作流，<strong>帮助大家可以从0到1的完成一个 Prompt 的书写和调试，并通过这样结构化的拆分，增强对 Prompt 的管理。</strong>我们的工作流可以分为 5 步，对应于文章 “第2节-第6节” 的 5 个章节：</p><ol><li>通过 <strong>Prompt 模版</strong>写出第一版 Prompt。</li><li><strong>细化模版</strong>各部分内容，整理 Prompt <strong>格式</strong>。</li><li>使用 RAG <strong>增加更多信息</strong>（few-shot，记忆，专业知识）。</li><li>利用 <strong>CoT</strong> 增强模型推理能力。</li><li>利用<strong>更多技巧</strong>不断优化。</li></ol><p>我们认为在一个大模型工程中，“Prompt”应该起到基石般的作用，有效稳定可扩展。对于一个大模型工程师而言，“Prompt” 也是必备的基础技能，希望可以通过这篇文章帮助大家更简单的上手 Prompt 的相关工作，<strong>让每个人都能编写 Prompt，人人都能成为 Prompt 工程师。</strong></p><h4 id="后续规划"><a href="#后续规划" class="headerlink" title="后续规划"></a>后续规划</h4><p>本文通过对 “Prompt” 工作的拆分和总结，体系化的介绍了 “Prompt 工程” 的工作方法，提出了一套通用的框架和工作流，帮助大家完成 “Prompt” 的编写和调试工作，这套方法也已经在我们的实际工作中应用落地。</p><p><strong>从技术角度讲，</strong>大模型相关的研发工作可以大体分为3部分 “输入” - “推理” - “训练”，本文聚焦在单模型的 “输入” 部分，对 “Prompt 工程” 相关的技巧进行了探讨。但仅仅在输入层面进行调试是远远不够的，推理部分也是影响大模型效果的关键一环，“Agent 技术”，“多模型协作”，“模型调度”  等等话题对大模型效果有着至关重要的影响。</p><p>因此，后续我会聚焦在模型推理的部分，<strong>以 “Agent 技术”  作为重点，</strong>展开讨论“模型推理”，“模型调度” 相关的话题，对“LangChain”，“Dify” 等推理框架，以及 “Agent” 常用框架进行探讨，依然从应用角度出发，探讨我对这些技术的思考，以及如何在应用中快速落地。</p><p>-End-</p><p>原创作者｜刘琮玮</p><p><a href="https://cloud.tencent.com/developer/article/2440609">https://cloud.tencent.com/developer/article/2440609</a></p>]]></content>
      
      
      <categories>
          
          <category> 大模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> prompt工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博雅软通</title>
      <link href="2024/07/23/byrtsoftlink/"/>
      <url>2024/07/23/byrtsoftlink/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>北京博雅软通信息技术有限公司(BYRT)是国家高新技术企业，核心团队曾就职与国家电网、华为、航天、中国软件、用友等高科技企业；公司主营业务方向是为智慧能源提供能碳智慧化交易、管理、决策的数据服务与管理平台，充分借助“AI、大数据、物联网” 等技术，依托自主研发的能源聚合管理系统、物联管理平台、物联网边缘计算终端产品，结合不断积累的丰富的行业解决方案，赋能行业；公司目标和愿景是做全国领先的能源数字化产品与服务供应商。</p><a id="more"></a><h3 id="主营业务"><a href="#主营业务" class="headerlink" title="主营业务"></a>主营业务</h3><p>打造用户侧能碳数字化建设与数智化运营的端到端解决方案，源网荷储全覆盖，全方位提升用户侧能碳数智化，以能碳管理与运营数字化解决方案为推广模式，以核心数智化产品作为支撑，提供端到端的落地能力，未来为能碳管理与运营提供数字化服务，专注在能碳管理的产品与解决方案，以数字化赋能生态伙伴。</p><ul><li>企业有效降碳：精准量碳、计碳、管碳、降碳；企业碳资产顾问</li><li>新型电力系统负荷调控：负荷管理，光储直柔，连接电网与用户</li><li>用户侧能源科学运营：负荷聚合、虚拟电厂、微网EMS用户侧能源能管理专家</li><li>智慧用电绿色节能：全面用能监测分析，安全用电，精准用能，减排增效</li></ul><h3 id="核心产品"><a href="#核心产品" class="headerlink" title="核心产品"></a>核心产品</h3><h4 id="能碳大脑数据平台"><a href="#能碳大脑数据平台" class="headerlink" title="能碳大脑数据平台"></a>能碳大脑数据平台</h4><blockquote><p>通过数据为用户提供用能画像、风光储建设投资回报评估、用能经济性评估、碳排分析评估等一系列智能大数据研判，提高用户整体用能水平。保障用户能源资产使用，挖掘用户能源管理价值，为用户提供资产保理，能源管理方案，帮助用户提高能效，降低电费。</p><p>通过大数据分析，可以对电力供需进行精准预测，有效避免电力供需失衡。通过能碳分析可有效迎合国家控排标准参加绿碳交易、电力市场交易获取额外营收。</p></blockquote><h4 id="配电智能监控运维管理系统"><a href="#配电智能监控运维管理系统" class="headerlink" title="配电智能监控运维管理系统"></a>配电智能监控运维管理系统</h4><blockquote><p>高度融合“云、大、物、移、智”等技术，通过系统集成优化和信息共享，实现配电站运行、电力设备、环境、安防、视频等综合信息的统一接入、存储和管理…</p></blockquote><h4 id="智能微电网综合管理系统"><a href="#智能微电网综合管理系统" class="headerlink" title="智能微电网综合管理系统"></a>智能微电网综合管理系统</h4><blockquote><p>支持高级图形引擎，满足GIS+3D多维展示、多场站监控、场站详情、多种类设备监控、设备实时监控、设备历史数据追溯、设备运维数据追溯、设备健康分析…</p></blockquote><h4 id="充电桩运营管理系统"><a href="#充电桩运营管理系统" class="headerlink" title="充电桩运营管理系统"></a>充电桩运营管理系统</h4><blockquote><p>充电桩运营管理系统利用物联网、通信等技术，将具有身份标识的充电设施进行互联，实现基于物联网的电动公交智能充电服务网络的自动化运行与管理</p></blockquote><h4 id="”双碳“综合管理平台"><a href="#”双碳“综合管理平台" class="headerlink" title="”双碳“综合管理平台"></a>”双碳“综合管理平台</h4><blockquote><p>六大服务能力，支撑“碳流地图、全景监测、低碳规划、低碳调度、低碳供应链、碳计量、碳标签、碳评价、碳响应、碳交易”十大典型应用，打造国内领先…</p></blockquote><h4 id="企业综合能源管理平台"><a href="#企业综合能源管理平台" class="headerlink" title="企业综合能源管理平台"></a>企业综合能源管理平台</h4><blockquote><p>结合地域条件和业务需求，规划中通过配置分布式光伏等可再生发电资源为用户提供绿色能源，集成多能优化调度技术，进一步提高可再生能源在用户能源供应的…</p></blockquote><h4 id="蓄电池在线监测养护智能运维系统"><a href="#蓄电池在线监测养护智能运维系统" class="headerlink" title="蓄电池在线监测养护智能运维系统"></a>蓄电池在线监测养护智能运维系统</h4><blockquote><p>针对备用电源、蓄电池、高速公路、隧道、沿线机房内备电系统(蓄电池UPS、直流电源)管理不到位，容易被忽视，而导致的动力事故问题，本产品通过物联网技术…</p></blockquote><h4 id="配电网透明化管理平台"><a href="#配电网透明化管理平台" class="headerlink" title="配电网透明化管理平台"></a>配电网透明化管理平台</h4><blockquote><p>实现在配网运行的故障、负载、分布式光伏等监测信息方面提升联动和可视化分析能力，在配网抢修、服务、分布式光伏管理等方面提升配网业务的管理场景及相…</p></blockquote><h4 id="绿色低碳供应链平台"><a href="#绿色低碳供应链平台" class="headerlink" title="绿色低碳供应链平台"></a>绿色低碳供应链平台</h4><blockquote><p>按照先低碳再绿色、先核算后评价的思路，先行从产品、链上企业两个维度构建碳排放核算模型，编制符合国网特色的产品碳排放核算方法与报告指南，并结合…</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 竞品分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 能源行业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【阅读笔记】产品心经——精益方法和产品开发</title>
      <link href="2024/07/19/Lean-Methods-and-Product-Development/"/>
      <url>2024/07/19/Lean-Methods-and-Product-Development/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>O.S. 从这章开始，就进入到<code>产品心经</code>比较难的地方了。</p></blockquote><p>创新型产品失败的概率如此之高，到底有没有什么方法能降低概率？答案就是<strong>精益（Lean）</strong>。精益代表了一种不断形成创新的新方法，它源于“精益生产”的理念，提倡企业进行<strong>“验证性学习”</strong>，先向市场推出极简的原型产品，然后在不断地试验和学习中，以最小的成本和有效的方式验证产品是否符合用户需求，并迭代优化产品，灵活调整方向。</p><a id="more"></a><h3 id="评估产品-项目是否靠谱的7个标准"><a href="#评估产品-项目是否靠谱的7个标准" class="headerlink" title="评估产品/项目是否靠谱的7个标准"></a>评估产品/项目是否靠谱的7个标准</h3><blockquote><p><strong>本章概述：</strong>评估产品或项目是否靠谱是产品经理必须具备的一种能力。学会从做产品缘由、团队、撒手锏、刚需和市场容量、顺势而为、风险和增长动力引擎7个方面进行评估。当然并不是说按照这7个方面进行评估后的产品就一定能成功，因为定性判断和评估或多或少会存在一定的误差，而且很多产品的成功带有一定的偶然性。但是总的来说，有评估标准总比没有好。</p></blockquote><p>评估一个产品或项目是否靠谱，基本上可以从<strong>定性和定量</strong>两个角度进行。定性主要包括原因、团队、撒手锏、刚需市场容量、顺势和风险；定量主要包括增长动力引擎。</p><h4 id="做产品的缘由"><a href="#做产品的缘由" class="headerlink" title="做产品的缘由"></a>做产品的缘由</h4><p>为什么要做这个产品？这是第一个要评估的问题。大多数人都知道做什么，怎么做，但是很少有人知道为什么做。<strong>做产品的缘由主要有以下4个方面。</strong></p><ul><li>增加收入，提高市场占有率，创造盈收。<strong>适用于收入型的产品</strong>，<strong>赚钱</strong>是第一目标。</li><li>提高用户基数和黏度。<strong>适用于做用户量级的产品，在没到达赚钱的最佳时机之前</strong>，<strong>提高用户活跃度和留存率</strong>是第一目标。</li><li><strong>市场造势</strong>，提升品牌价值。<strong>适用于增长型的产品</strong>，找到目标用户群在哪，将其转化成自己的用户，扩大产品的影响力，也就是提高品牌价值是第一目标。</li><li><strong>产品差异化</strong>，抑制并击败竞争对手。<strong>适用于战略级的产品，不一定要求赚钱</strong>，哪怕是流血烧钱，也要牵制竞争对手，也就是击败竞争对手是第一目标。</li></ul><p>有的时候，只是创始人头脑一热，偶得一想法，是否有必要实现这个想法，创始人可能自己都没有主意。被人质疑的时候，根本回答不上来。</p><h4 id="团队"><a href="#团队" class="headerlink" title="团队"></a>团队</h4><p>这方面主要是指<strong>评估团队成员</strong>，看团队成员在自己的专业能力方面是否是顶级的。圈里有个<strong>“铁三角”</strong>说法，老大要懂<strong>产品</strong>，老二要懂<strong>技术</strong>，老三要懂<strong>运营和市场</strong>，这对于一个移动互联网的创业型团队来讲是较为优秀的组合。</p><blockquote><p>人才和团队是企业的核心价值。有时候想法确实非常好，但是缺乏一流的人才来执行和实现，产品或项目往往死得比较快。好多风险投资机构主要是看人，只要团队优秀，就算产品或项目看起来不怎么靠谱，或者有一定的缺陷，投资机构还是会选择投资。</p></blockquote><h4 id="撒手锏"><a href="#撒手锏" class="headerlink" title="撒手锏"></a>撒手锏</h4><p>产品的撒手锏或者杀招在哪？这个需要重点评估，撒手锏用现在比较时髦的话来说就是<strong>“颠覆式创新”</strong>。这种颠覆式创新主要体现在4个方面。</p><ul><li><p><strong>技术创新：</strong>以前实现不了，现在通过技术手段能实现；或者以前能实现，但是离用户预期较远，现在能够更好地超出用户预期。一般而言，技术创新所构建的竞争壁垒比较坚固。</p><blockquote><p>比如以Google Glass为代表的穿戴式设备。</p></blockquote></li><li><p><strong>产品或服务创新：</strong>针对用户的核心诉求，在解决方案方面满足甚至超出用户预期的创新。</p><blockquote><p>这也是我们常说的<strong>平庸的产品或服务满足用户需求，优秀的产品或服务引导用户需求，卓越的产品或服务创造用户需求。</strong>比如同样是做餐饮，雕爷牛腩独辟蹊径，通过互联网玩法使自身估值提升，成就中国第一家“轻奢餐”餐饮品牌。轻奢餐能提供介于快餐和正餐之间的用餐感受，比低价位的快餐要美味和优雅，又比豪华正餐节省时间和金钱。雕爷牛腩餐厅有一个独特岗位——CTO（首席体验官）。好的餐厅有三要素：口味、环境、服务——前两者，改进的空间是有限的，而服务的改进空间是无限的。鉴于此，餐厅CTO会以顾客的角度去感知餐厅服务，不断根据反馈的意见改进服务，并有权为顾客喜爱的甜点和小菜免单。</p></blockquote></li><li><p><strong>流程创新：</strong>技术活动或生产活动中的操作程序、工作流程、方式方法和规则体系的创新。</p><blockquote><p>比如生鲜电商一般会经历生产、加工、流通、销售等环节。比如CSA（社区支持农业）模式使得从田间地头到餐桌直供，减少了中间环节。</p></blockquote></li><li><p><strong>商业模式创新：</strong>指为企业价值创造提供的基本逻辑的创新，即把新的商业模式引入社会的生产体系，并为客户和自身创造价值。</p><blockquote><p>通俗地说，商业模式创新就是指企业以新的有效方式赚钱。新引入的商业模式既可能在构成要素方面不同于已有的商业模式，也可能在要素间关系或者动力机制方面不同于已有的商业模式。比如社群经济的兴起，草根到粉丝到社群的发展路径。小米和罗辑思维就是典型案例。如果产品或项目有颠覆式创新，一般而言是比较靠谱的。</p></blockquote></li></ul><h4 id="刚需和市场容量"><a href="#刚需和市场容量" class="headerlink" title="刚需和市场容量"></a>刚需和市场容量</h4><p>决定开发一款产品之前，需要搞明白如下问题：<strong>用户需求的痛点是什么？用户的需求紧迫吗？用户需求的频次如何？有着类似需求的用户量到底有多大？需求是否是刚需？</strong>要想弄明白这些问题，可以从如下几个方面入手。</p><ul><li><p>用户期望得到的与现实提供的产品之间存在着巨大的鸿沟，<strong>鸿沟</strong>是刚需。</p><blockquote><p>比如着急去某地办事，就是打不到出租车。</p></blockquote></li><li><p>马斯洛需要层次越底层越是刚需。</p><blockquote><p>比如生理需求比安全、社交和尊重需求更加重要。</p></blockquote></li><li><p>用户离不开、必不可少的需求。</p><blockquote><p>如果用户得不到满足，生理或心理就会遭受重大打击的需求是刚需。</p></blockquote></li><li><p>用户愿意为之付费的需求是刚需。</p></li><li><p>受国家政策、法规、文化、习惯、重大事件的影响而产生的需求是刚需。</p></li><li><p>用户场景动态变化产生的需求是刚需。</p><blockquote><p>比如十年前能买到一部能打电话和发短信的功能手机就很不错了，十年后，用户不再把打电话和发短信看得那么重，现在看中的是智能手机大不大，好看不好看，酷不酷，拿出去有没有面子。例如，时代在变迁，不同圈层用户的喜好也在变化。也许“70后”“80后”比较关注的是功能，但是“90后”“00后”对情感的诉求远胜于对功能的诉求。他们关注自我实现和精神引领，关注自己的“存在感”。也就是说，情感和精神引领方面的诉求成为“90后”“00后”的刚需。这个现象也很好解释，过去相当长的一段时间内，马斯洛需要层次里面的底层需要是刚需，自我实现是兴奋性的诉求。但是，发展到现在，兴奋性的核心诉求变成了“90后”“00后”的刚需，这恰好印证了刚需是一个动态变化的过程。</p></blockquote><p>评估刚需的时候，还需要<strong>评估其市场容量</strong>。一般而言，市场<strong>容量较大的产品或项目一般是比较靠谱的</strong>。</p></li></ul><h4 id="顺势而为"><a href="#顺势而为" class="headerlink" title="顺势而为"></a>顺势而为</h4><blockquote><p>就像雷军说的，<strong>只要站在风口，猪也能飞起来。</strong>顺应行业发展趋势的产品或项目一般是比较靠谱的。</p></blockquote><p>顺势而为指的是做产品的时机是否合适，也可以指是否顺应行业的发展趋势。预测行业发展趋势一般有如下方法：</p><h5 id="历史推断法"><a href="#历史推断法" class="headerlink" title="历史推断法"></a>历史推断法</h5><blockquote><p>总结过去的发展历程，预测未来的发展趋势。</p></blockquote><p>比如互联网产品走的是<code>工具→社区→娱乐→商务→平台</code>的路线，进而可以预测出移动互联网产品的发展趋势，走的路线和互联网产品的路线的差不多，也走的是<code>工具→社区→娱乐→商务→平台</code>的路线。</p><h5 id="逆向思维法"><a href="#逆向思维法" class="headerlink" title="逆向思维法"></a>逆向思维法</h5><blockquote><p>按照和目前相反或相对的方向推断行业发展趋势。</p></blockquote><p>以社区产品为例，社区有三大要素，即<strong>关系、内容和互动</strong>。按照侧重点不同，社区产品分为内容型社区和关系型社区。</p><p>国内社区的发展是从内容型社区起步的，比如豆瓣和大众点评网，后来发展到以人人网和开心网为代表的关系型社区；</p><p>基于关系这个要素，先是以人人网和开心网为代表的强关系社区，后来发展到以新浪微博和腾讯微博为代表的弱关系社区；</p><p>之后兴起一种概念叫弹性社交网络，即基于陌生人的社交网络，发展到以陌陌、友加为代表的零关系社区。</p><p>关系型社区走的是强关系→弱关系→零关系的路线（这是一个循环的过程）。</p><p>再比如，基于内容这个要素，先是以博客、微博为代表的文字社交，后来发展到以Instagram为代表的图片社交，之后发展到以微信为代表的语音社交，再之后是以抖音、快手为代表的视频社交。</p><h5 id="PEST分析法"><a href="#PEST分析法" class="headerlink" title="PEST分析法"></a>PEST分析法</h5><blockquote><p>PEST分析是企业对外部的大环境进行战略分析时常用的一种方法，P是政治(politics)，E是经济(economy)，S是社会(society)，T是技术(technology)。通过分析以上四个因素，可以了解到企业现下所面临的宏观环境，根据分析结果，来考虑企业下一步的战略计划。</p></blockquote><p>比如参与式体验农庄的兴起，对于在高压下忙碌生活的城市人来说，无疑是一种释放心灵与身体的短暂之旅——只闻花香，不谈悲喜。而这样的农事活动项目，让平日里看厌了车水马龙，吸够了雾霾、浑浊空气的城市人参与进来，享受大自然给予的一切。结合农业民俗开展种植体验、动物喂养、豆制品制作等项目，既活跃了身心又增强了情侣、爱人、亲子、朋友之间的情谊；还能感受自然风光，体验别样的农耕文化，让顾客在这样的环境里获得欢乐、知识和刺激，增进感情。</p><p>PEST 分析是一种重要的市场研究工具，可以提供有用的洞察，了解哪些策略可能最适合企业发展。常见的PEST图如下所示：</p><p><img src="/2024/07/19/Lean-Methods-and-Product-Development/image-20240722123332552.png" alt="image-20240722123332552" loading="lazy"></p><p><strong>PEST分析应该在什么时候使用呢？</strong>最直接的答案是企业需要有关外部环境的更多信息的时候，这可能是<strong>企业最初建立新业务的时候，或者企业正在考虑改变当前业务的方向。</strong></p><p>PEST分析可能构成年度战略规划过程的一部分，但如果管理者了解宏观环境即将发生的变化并希望重新评估市场，就可以进行临时分析。如果管理者正在考虑发展业务或潜在的合作、合并或收购机会，也可以选择进行 PEST 分析。</p><p><img src="/2024/07/19/Lean-Methods-and-Product-Development/whatispest03.png" alt="img" loading="lazy"></p><h5 id="价值链法"><a href="#价值链法" class="headerlink" title="价值链法"></a>价值链法</h5><p>根据<code>供应商—制造商—经销商—用户终端</code>这条价值链来预测行业发展趋势。分析为什么互联网及移动互联网呈现平台开放的趋势，其实开放平台的目的还是通过第三方开发者给网站带来丰富的内容资源，包括各种形式的App应用，如工具类、娱乐类和商务类的应用，说到底还是解决产业链的上游（内容来源）的问题。</p><h4 id="风险"><a href="#风险" class="headerlink" title="风险"></a>风险</h4><blockquote><p>这方面主要评估产品或项目面临的风险，评估这些风险对产品是否是致命的。</p></blockquote><p>产品或项目可能面临的外部和内部风险包括政策风险、市场风险、技术风险、决策风险、法律风险、资本风险等。如果产品或项目的风险等级为高，且没有强有力的应对方案，这样的产品或项目一般而言比较危险。如果产品或项目的风险等级为中或低，且有相应的应对方案，这样的产品或项目就可以继续推进。</p><h4 id="增长动力引擎"><a href="#增长动力引擎" class="headerlink" title="增长动力引擎"></a>增长动力引擎</h4><p>增长动力引擎主要<strong>从定量角度</strong>进行评估。哪些数据指标可以用来衡量一个产品或项目具备增长动力引擎？也就是说，符合哪些数据指标就可以扩大规模？主要数据指标如下。</p><h5 id="（1）用户新增率＞用户流失率"><a href="#（1）用户新增率＞用户流失率" class="headerlink" title="（1）用户新增率＞用户流失率"></a>（1）用户新增率＞用户流失率</h5><blockquote><p>用户新增率指的是在特定时间段内，新增的用户数所占用户总数的比例。比如，用户基数是100人，在特定的时间段内增长到110人，那么新增率就是（110–100）/100=10%。用户流失率指的是在特定的时间段内，用户的流失数量与全部用户数量的比例。比如，用户基数是100人，在特定的时间段内减少到90人，那么流失率就是（100–90）/100=10%。</p></blockquote><p>如何理解用户新增率大于用户流失率？这个很容易理解，就好像是一个蓄水池，有一根进水管和一根出水管，进水管代表新增率，出水管代表流失率，一旦进水量小于出水量，这个蓄水池的水终将有一天流尽。也就是说，这样的产品或项目不太靠谱。</p><p>一般而言，用户新增率大于用户流失率的产品或项目比较靠谱。</p><h5 id="（2）推荐系数＞1"><a href="#（2）推荐系数＞1" class="headerlink" title="（2）推荐系数＞1"></a>（2）推荐系数＞1</h5><blockquote><p>推荐系数也叫K因子，指的是每个用户推荐带来的平均用户数要大于1。</p></blockquote><p>其实，这也是衡量产品或项目口碑的一种方法。</p><p>推荐系数大于1的产品或项目一般比较靠谱。</p><h5 id="（3）用户留存率＞40"><a href="#（3）用户留存率＞40" class="headerlink" title="（3）用户留存率＞40%"></a>（3）用户留存率＞40%</h5><blockquote><p>用户在某段时间开始使用应用，经过一段时间后，仍然继续使用应用，被称作留存。</p></blockquote><p>顾名思义，留存指的就是“有多少用户留下来了”。留存用户占当时新增用户的比例是留存率，按照每隔1单位时间（例如，日、周、月）进行统计。留存用户和留存率体现了应用的质量和保留用户的能力。</p><p>留存率公式为 （一般统计周期为天） ：</p><p>留存率=登录用户数/新增用户数×100%</p><p>其中，新增用户数指在当前时间段新注册登录应用的用户数。登录用户数指在当前时间段至少登录过一次的用户数。</p><p>留存率还可分为以下几种。</p><p>次日留存率=（当天新增的用户数且在第2天还登录的用户数）/当天新增的用户数</p><p>第7日留存率=（当天新增的用户数且在往后的第7天还有登录的用户数）/当天新增的用户数</p><p>第30日留存率=（当天新增的用户数且在往后的第30天还有登录的用户数）/当天新增的用户数</p><blockquote><p>为什么说用户留存率＞40%，就可以认为产品或项目是比较靠谱的？</p></blockquote><p>根据一些统计专家的数据统计，比较优质的产品或项目的留存率都在40%左右。如果应用型产品的留存率接近游戏型产品的留存率（顶级手游产品的留存率约为40%），这无疑说明产品是靠谱的。</p><h5 id="（4）LTV＞3CPA"><a href="#（4）LTV＞3CPA" class="headerlink" title="（4）LTV＞3CPA"></a>（4）LTV＞3CPA</h5><blockquote><p>LTV（life time value）指的是用户终生价值，CPA (Cost Per Action)指的是每获取一个付费用户的成本。</p></blockquote><p>比如，某个产品的盈利模式是会员制度，假设每个账号的平均寿命是2年，每年支付会员费约40元，那么粗略计算LTV=2×40=80元。假设每获取一个付费用户的成本是20元，即CPA=20元，也就是说，2年过后，每开发一个付费用户就可以赚取80-20=60元。</p><p>假设LTV=20元，CPA=80元，也就是说，2年过后，每开发一个付费用户就要亏损60元，因为20–80=–60。</p><p>LTV＞CPA的时候，可以说这个产品或项目可能有点靠谱，但是如果要说比较靠谱，需要LTV＞3CPA。</p><p>在项目启动之前就找出那些失败概率较高的项目，并将这些项目归类为不应该启动的项目，这样也会减少一些资源的浪费。</p><h3 id="精益创业的3个方面"><a href="#精益创业的3个方面" class="headerlink" title="精益创业的3个方面"></a>精益创业的3个方面</h3><blockquote><p>本章概述：精益创业模式虽然强调快速假设、快速学习、快速调整，但<strong>不等于可以盲目试错</strong>。精益开发模式不能确保产品或项目孵化一定成功，<strong>只是一个帮助提高成功概率的框架</strong>。精益创业强调走出办公室多与用户互动，目的在于了解产品是不是用户想要的，用户愿不愿意为之付费。</p></blockquote><h4 id="精益创业简介"><a href="#精益创业简介" class="headerlink" title="精益创业简介"></a>精益创业简介</h4><p><strong>瀑布式开发</strong>的基本流程是需求 → 设计 → 开发 → 测试 ， 是一个更倾向于严格控制的管理模式 。 要求有明确的需求，大家按照需求一步步做好规划，每一阶段工作的完成是下一阶段工作开始的前提，每一阶段都要进行严格的评审，保证各阶段的工作做得足够好时才允许进入下一阶段。<strong>这种模式一般适用于需求比较明确、to B 端的项目。</strong></p><p><img src="/2024/07/19/Lean-Methods-and-Product-Development/v2-a18a40df65fd27be09bd1a32c451b837_720w.jpg" alt="img" loading="lazy"></p><p>瀑布项目失败率会比较高，因为它有一个很大的缺陷， 就是受各种条件的制约。当产品研发完成后，到了产品测试阶段 万一发现问题 ，或者发现其无法满足市场需求，那么就需要重新开发，甚至需要重新规划产品，这间接导致了产品延期发布的高发性 与不确定性。</p><blockquote><p>微软 的瀑布式开发模式就是个很好的例子。随着用户对软件的需求越来越苛刻，微软的软件产品曾经遭受了大家的不满，原因并非是产品的使用问题，而是其更新周期太过漫长 。比如微软Office 、 Windows 等主打产品的更新周期长达 3 年左右，软件延期发布实属家常便饭，此时微软的瀑布式开发模式已经难以满足新型软件的开发要求，不得不改变产品的研发策略。</p></blockquote><p><strong>敏捷开发</strong>是一种以用户需求进化为核心、迭代、循序渐进的开发方法。首先把 用户（客户 ）最关注的软件原型做出来，交付或上线，在实际场景中去 快速 修改弥补需求中的不足，再次发布版本。通过一些敏捷实践方式，细化story ，提供更小的迭代。如此循环，直到用户（客户）满意。<strong>适用于需求不明确、创新性或者需要抢占市场的项目。（问题已知但解决方案未知）</strong></p><blockquote><p>国产开源的<a href="https://link.zhihu.com/?target=https://www.zentao.net/?from=upluzhihu">禅道项目管理软件</a>，2009 年开始遵循Scrum （ 敏捷式开发中比较流行的一种方式）的管理思想，发布了第一个产品版本 。自发布以来，禅道曾数次打败JIRA 及其他强有力的竞品，连续四年荣膺国内外软件测试行业最常用测试管理工具第一名 ，也算是国产软件 的骄傲了。在产品开发过程中， 禅道研发团队认为Scrum方法虽然注重实效，操作性强，非常适合软件研发项目的快速迭代开发 ，但它只规定了核心的管理框架，还有很多细节流程没有完善。于是禅道团队结合国内研发现状，整合了Bug管理、测试用例管理、发布管理、文档管理等功能，完整的覆盖了软件研发项目的整个流程。在禅道软件中，明确将产品、项目、测试三者概念区分开，产品人员、开发团队、测试人员，三者分立，互相配合，又互相制约，通过需求、任务、Bug来进行交相互动，终通过项目拿到合格的产品，是敏捷式开发的优秀案例。</p></blockquote><p><img src="/2024/07/19/Lean-Methods-and-Product-Development/v2-900f88d2d5ec67e7a53e73e5adee8c0f_720w.jpg" alt="img" loading="lazy"></p><p><strong>精益开发模式</strong>提倡企业进行“验证性学习”，先向市场推出极简的原型产品，然后在不断试验和学习中，以最小的成本和有效的方式验证产品是否符合用户需求，并迭代产品，灵活调整方向。<strong>这种模式适用于问题未知、解决方案也未知的情境。</strong></p><h5 id="精益创业的基本原则"><a href="#精益创业的基本原则" class="headerlink" title="精益创业的基本原则"></a>精益创业的基本原则</h5><ul><li>减少浪费，低成本（无收入不扩增）</li><li>一种开发、测量、学习的文化</li><li>快速假设，快速学习，失败后快速调整</li><li>敏捷技术开发。</li></ul><h5 id="精益创业的特征"><a href="#精益创业的特征" class="headerlink" title="精益创业的特征"></a>精益创业的特征</h5><ul><li>非资本推动型，主动自发，关注用户价值，拒绝华而不实</li><li>持续的用户互动</li><li>从第一天开始，以收入为目标</li><li>如果没有收入，就限制规模编制</li><li>假设用户和未来都是未知的</li><li>资源的低燃烧率，降低风险。</li></ul><h3 id="精益画布的9个空格"><a href="#精益画布的9个空格" class="headerlink" title="精益画布的9个空格"></a>精益画布的9个空格</h3><h3 id="精益创业的访谈"><a href="#精益创业的访谈" class="headerlink" title="精益创业的访谈"></a>精益创业的访谈</h3><h3 id="华为BLM工具"><a href="#华为BLM工具" class="headerlink" title="华为BLM工具"></a>华为BLM工具</h3><h3 id="市场洞察的5个看"><a href="#市场洞察的5个看" class="headerlink" title="市场洞察的5个看"></a>市场洞察的5个看</h3><h3 id="BLM战略意图的3个方面"><a href="#BLM战略意图的3个方面" class="headerlink" title="BLM战略意图的3个方面"></a>BLM战略意图的3个方面</h3><h3 id="BLM创新焦点的4种策略"><a href="#BLM创新焦点的4种策略" class="headerlink" title="BLM创新焦点的4种策略"></a>BLM创新焦点的4种策略</h3><h3 id="BLM业务设计的6个要素"><a href="#BLM业务设计的6个要素" class="headerlink" title="BLM业务设计的6个要素"></a>BLM业务设计的6个要素</h3><h3 id="BLM战略执行的4个方面"><a href="#BLM战略执行的4个方面" class="headerlink" title="BLM战略执行的4个方面"></a>BLM战略执行的4个方面</h3>]]></content>
      
      
      <categories>
          
          <category> 产品经理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【阅读笔记】产品心经：产品经理应该知道的72件事——核心素养、深刻认知产品</title>
      <link href="2024/07/18/Core-competencies-of-pm/"/>
      <url>2024/07/18/Core-competencies-of-pm/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>前两章阐述了产品经理的核心素养和工作流程，强调了产品经理在产品从无到有、从有到优的过程中的关键角色，包括用户需求分析、市场渠道分析、成本管理、产品迭代、竞争壁垒分析和团队管理等。同时，还强调了产品经理需要具备的独立思考能力、产品哲学、深入用户生活的能力、品味、洞察力、判断力和执行力，并通过理解产品的五个要素（内涵、形式、外延、理念和终端）来深刻认知产品，最终通过借鉴优秀产品来提升自身的产品意识和创新能力。</p><blockquote><p>从第三章开始，难度duang的一下子就上来了，后面的就放慢点细细学习了。。。</p></blockquote><a id="more"></a><h3 id="产品经理的核心素养"><a href="#产品经理的核心素养" class="headerlink" title="产品经理的核心素养"></a>产品经理的核心素养</h3><h4 id="产品经理工作的8个核心步骤"><a href="#产品经理工作的8个核心步骤" class="headerlink" title="产品经理工作的8个核心步骤"></a>产品经理工作的8个核心步骤</h4><p>产品经理是产品从无到有、从有到优的最主要负责人，主要的工作包括：</p><ul><li>用户需求与市场分析</li><li>提出差异化的需求解决方案</li><li>传递用户价值的市场渠道分析</li><li>成本、收入以及盈亏平衡点分析</li><li>需求分析与管理和产品交互设计</li><li>根据用户的反馈和数据分析不断迭代产品</li><li>做好竞争壁垒分析</li><li>进行强有力的团队管理</li></ul><h4 id="独立思考能力"><a href="#独立思考能力" class="headerlink" title="独立思考能力"></a>独立思考能力</h4><blockquote><p>培养独立思考能力，对“产品低智商”说不。</p></blockquote><p>培养独立思考能力最好的方法就是换位思考。如果我是某个产品的负责人，将怎么做以及如何优化它？多问为什么，切忌将假设当成结论，坚持这样的思维训练，产品智商就会逐步提升。常用练习题：你认为你们的产品应该解决的最大问题是什么？如果你的职位比现在高两级，要解决这个问题，你首先会做什么？</p><blockquote><p>这个确实很重要，不能人云亦云，要有自己的想法。</p></blockquote><h4 id="创立独特的产品哲学"><a href="#创立独特的产品哲学" class="headerlink" title="创立独特的产品哲学"></a>创立独特的产品哲学</h4><p>产品人的产品哲学可能会不一样。笔者比较推崇的是产品魔力=科技×艺术×情感。其中又以情感为最重要的因素，产品要满足甚至超出用户的情感诉求预期。衡量用户与产品之间的感情深度，不在于用户使用产品后登到顶峰时的高度，而在于当用户跌到谷底时使用产品后得到的巨大反弹力。</p><blockquote><p>这个难度好大，上升到哲学层面了。。。。</p></blockquote><h4 id="必须“入戏”"><a href="#必须“入戏”" class="headerlink" title="必须“入戏”"></a>必须“入戏”</h4><p>产品经理“入戏”的窍门在于制定与用户亲密接触的规则和制度，如果能做到自发，那就更好了。走出办公室，体验用户生活，被用户灵魂附体，聆听用户的心声，倾听用户对产品的不满和抱怨，甚至吐槽。模拟用户一天的生活场景和行为轨迹，观察用户的情绪、态度、观点等，捕捉用户的心理，最终洞察出用户真实的需求，只有这样才能研发出用户喜爱的产品。</p><blockquote><p>如果目前公司的产品方向还没确定，连目标用户群体都不知道，怎么去“入戏”呢？</p></blockquote><h4 id="要有品位"><a href="#要有品位" class="headerlink" title="要有品位"></a>要有品位</h4><p>产品经理应该具备辨别和鉴赏能力，有品位，有内涵，有魅力。产品是内在气质的完美体现。往往优秀的产品经理会将自己独特的气质赋予产品，使得产品也有了独特的内在气质。要成为有品位的产品经理，主要有提升人文修养、提高审美能力和修养独特魅力三个途径。产品经理是产品最好的形象代言人。</p><blockquote><p>这个要求也好高，感觉品味就跟写字一样，一方面，“见字如见人，见人如见产品”；另一方面，两者都很难练习、培养。</p></blockquote><h4 id="洞悉背后的动机"><a href="#洞悉背后的动机" class="headerlink" title="洞悉背后的动机"></a>洞悉背后的动机</h4><p>产品职位的面试题，关键在于洞察出题者的动机，这与做产品时要洞察用户的动机和核心需求如出一辙。</p><blockquote><p>洞察背后的动机不仅仅是在面试时需要，在调研用户需求时也是需要的，只有洞察用户需求背后的动机，才能提炼出真实的用户痛点，从而设计出能让用户high的产品。</p></blockquote><h4 id="洞察、痛点、场景转换及同理心"><a href="#洞察、痛点、场景转换及同理心" class="headerlink" title="洞察、痛点、场景转换及同理心"></a>洞察、痛点、场景转换及同理心</h4><p>不要进入直觉式思维误区，而是要洞察用户的问题，然后基于资源和能力边界提供短期、中期和长期解决方案。痛点是恐惧和焦虑，通过场景转换将非痛点转化成痛点是一种非常重要的产品思维。同理心是产品经理必备的一种天赋，要做到将心比心。培养同理心最有效的工具是用户移情图。</p><h4 id="3个重要能力：洞察、判断及执行"><a href="#3个重要能力：洞察、判断及执行" class="headerlink" title="3个重要能力：洞察、判断及执行"></a>3个重要能力：洞察、判断及执行</h4><p>洞察力关键是要洞察事物的主要症结、矛盾或本质规律，透过现象看本质；判断力主要是选择和决策的能力，要确保做的是一件正确的事；执行力主要是落实到行动的能力，要确保把事情做完。</p><h3 id="深刻认知产品"><a href="#深刻认知产品" class="headerlink" title="深刻认知产品"></a>深刻认知产品</h3><h4 id="产品五要素"><a href="#产品五要素" class="headerlink" title="产品五要素"></a>产品五要素</h4><p>深刻理解产品，必须要理解产品的5个要素——<strong>内涵、形式、外延、理念和终端 。</strong></p><ul><li>产品的内涵指为用户提供的基本效用或利益，满足用户的本质需求；</li><li>产品的形式指实现产品的内涵所采取的方式，包括功能、内容、设计等；</li><li>产品的外延指用户在使用或购买产品时所得到的附加服务或利益；</li><li>产品的理念指产品的信念和宗旨，是用户使用或购买产品时期望得到的价值；</li><li>产品的终端指用户在哪些地方可以使用或消费产品。</li></ul><blockquote><p>以360安全卫士为例，具体说明以上几点。</p><ul><li>产品的内涵是解决用户网络安全的本质需求。</li><li>产品的形式是实现查杀流氓软件、通过打补丁的方式修复Windows系统的漏洞、查杀木马、拦截钓鱼网站以及加速开机、监控流量、复原系统等电脑管理功能。通过网页防护墙、保护用户账号安全、云查杀等构建全面防御体系。</li><li>产品的外延是开机加速、流量监控、电脑垃圾清理、软件管家等，其中开机加速和电脑垃圾清理等功能可以理解为从性能角度满足用户的需求。用户使用360安全卫士既可以解决网络安全问题，也可以解决性能问题，这就是附加价值。</li><li>产品的理念是专业、权威、安全和快速。不管是杀毒还是防毒，不管是清理垃圾还是开机加速，用户使用安全卫士，是期望得到360安全卫士的安全和快速。试想一下，如果用户使用一个杀毒防毒产品后，并没有起到作用甚至还造成了损失，这样的产品连生存下去都会很困难。</li><li>产品的终端是电脑、手机和Pad。</li></ul></blockquote><p>深刻理解产品的5个要素：内涵、形式、外延、理念和终端。这是我们研究、分析产品的基本功。最重要的是产品如人，产品具有生命力和灵魂。产品不是一个冷冰冰的东西，而是一个有温度、有感情的有机体。在产品研发过程中，赋予产品温度、情感和灵魂才是使产品产生魔力的根本所在。</p><h4 id="打造产品独特气质的三步骤"><a href="#打造产品独特气质的三步骤" class="headerlink" title="打造产品独特气质的三步骤"></a>打造产品独特气质的三步骤</h4><blockquote><p>什么是产品的气质？气质＝独特魅力，吸引别人注意，使看到的人“过目不忘”，并且让别人“不可救药”地、疯狂地爱上。</p></blockquote><ul><li>超出预期=跨越需求鸿沟</li></ul><p>用户真心想要的产品或服务与他们实际购买或使用的产品或服务之间总是存在着一条巨大的鸿沟，越过鸿沟代表超出预期（从需求、产品、技术发力）。</p><ul><li>人性设计=乔布斯设计思想</li></ul><blockquote><p>乔布斯设计思想的精髓主要表现在极简明快、直指人心、不离现实、活用实用、继承传统、不断超越。</p></blockquote><p>人性设计指的是直指人心的极简设计，需要像设计艺术品一样不断打磨产品，最终使产品成为精品中的精品（从信息架构、交互设计和视觉设计发力）。</p><p>1） 直指人心： 爱美之心，人皆有之。现在大家提得比较多的体验经济等概念，其实都有一个大前提，那就是视觉的冲击力和艺术美的爆发力。</p><p>2） 不离现实： 设计灵感来源于现实生活，活学活用，比如人的控制欲望。人一般都有控制客观上无法控制的东西的倾向，比如过马路的时候按下绿灯按钮（以为自己能控制信号控制器）、等电梯的时候按下上楼或下楼的指示灯按钮（以为自己能控制电梯的升降）等，其实这些按钮都可以称为“安慰按钮”。好的产品应该适当地添加“安慰按钮”，以减少用户的焦虑。</p><p>3） 极简明快： 多即是少，做必要的减法。心理学中的“选择悖论”指出设计需要极简。选择悖论指的是选择范围太大会导致用户无所适从，很容易产生“干脆什么也不选择”的想法。</p><ul><li>情感共鸣=知音知己</li></ul><p>情感共鸣指的是将产品打造成用户的知音，使产品有温度、有情感；最终征服用户（从各个方面发力）。</p><h4 id="产品定位的what、how、why"><a href="#产品定位的what、how、why" class="headerlink" title="产品定位的what、how、why"></a>产品定位的what、how、why</h4><blockquote><p>什么是产品定位？产品如何定位？产品定位到底有什么价值？</p></blockquote><p><strong>产品定位的定义：</strong>指的是产品在用户心智模型中的第一反应，也就是看到新产品后，根据自己的知识、经验和想象做出的第一反应。</p><p><strong>如何进行产品定位？</strong>主要应明确这几个问题。</p><ul><li>什么行业、什么类型的产品？</li><li>目标用户群是谁？</li><li>解决用户什么问题？</li><li>给用户带来什么价值？</li><li>跟竞争对手的差异化在哪？</li><li>如何匹配和强化产品与用户心智模型的连接？</li></ul><blockquote><p>在定位产品的过程中，目标用户群是谁，解决用户什么问题，如何匹配和强化产品与用户心智模型的连接，这三个方面最为重要。</p></blockquote><p>对于心智模型的连接，我们一般会使用比喻法，比如教育版的“微信”，一般要求喻体的品牌知名度越高越好，这样理解的成本就会降低很多，能迅速引发用户的联想和第一反应。</p><blockquote><p>比如，阅米是一款PC端智能阅读工具：主要面向23～40岁白领中的重度阅读者；解决信息过载和筛选难题；提高阅读效率，降低时间成本；是新闻资讯版的“豆瓣FM”，发现你的阅读DNA。“PC端智能阅读工具”，表明这是互联网阅读领域的一款PC端工具型产品；“智能阅读”不是社会化阅读，这是差异化；“面向23～40岁白领中的重度阅读者”，这是目标用户群；“解决信息过载和筛选难题”，这是解决用户问题；“提高阅读效率，降低时间成本”，这是给用户带来的价值；“是新闻资讯版的‘豆瓣FM’，发现你的阅读DNA”，这是匹配和强化产品与用户心智模型的连接。</p></blockquote><p><strong>产品定位的价值体现在三个方面：</strong></p><ul><li>一句话表达清楚产品：按照产品定位的六个方面去思考和表达，就能一句话表达清楚产品。</li><li>评估需求是否该做的一个重要标准：在产品定位比较清晰的前提下，我们根据产品定位推导出哪些需求该做，哪些需求不该做。</li><li>预测产品能否存活下去的一个标准：产品定位的问题，如是做平价商品，还是做中高端商品，这关系到企业的存活。</li></ul><h4 id="向优秀的产品学习"><a href="#向优秀的产品学习" class="headerlink" title="向优秀的产品学习"></a>向优秀的产品学习</h4><blockquote><p>产品借鉴的是产品的本质和精髓，是被借鉴对象对用户核心需求和人性的把控精准度及其对应的产品解决方案，切忌什么火就做什么、盲目跟风和抄袭。多思考和质疑，多做对比分析，需要遵循“拉远”原则。适合别人的不一定适合自己。要想做出一款成功的产品，至少要深刻分析、鉴赏和品味过100个以上的优秀产品。</p></blockquote><p>产品经理安装和使用这么多的App，无非是想扩大产品经理的产品视野，提高对产品的鉴赏和品味能力，能最终借鉴产品，为自己所用，这也是培养产品意识的一种好途径。</p><p><strong>什么是产品的借鉴？</strong></p><p>产品的借鉴指的是对产品的鉴赏和品味，不仅要深刻理解被借鉴对象做了什么，而且要深刻理解被借鉴对象为什么这样做，为什么这个时间做，哪些地方做得好。借鉴的是产品的本质和精髓，借鉴的是被借鉴对象对用户核心需求和人性的把控精准度及其对应的产品解决方案。产品的借鉴，需要遵循“拉远”原则。拉远的方式可以让我们在更大的范围内观察事物。比如，一把椅子在一个房间中，一个房间在一座大楼中，一座大楼在更大的环境中，而更大的环境则在城市规划中。这就是将产品放置在更大的背景环境中去考虑，这样就可以避免出现只见树木不见森林的现象。产品的借鉴，可以从战略规划、产品功能、产品内容、用户体验、产品运营、盈利模式等方面进行借鉴。</p><blockquote><p>·Total boox：先阅读后付费。用户只需要支付他们所读页数的费用。你可以先将自己喜欢的书挑好，建立自己的电子书架，然后只有在阅读的时候才需要支付。比如用户读了一本书的10%，只要付10%的费用。用户可以预先充值，只要用户停留页面超过6秒，就要扣掉相应的钱。采用这种模式主要是为了解决用户先买书后读书、加重心理和经济负担的问题。这种模式同样有利于收集和分析用户阅读兴趣的数据，价值非常大。可借鉴之处在于按需付费。·Hitbliss：让用户靠看广告赚“钱”来购买高清视频数字内容，即看广告赚积分，购买更多内容。用户选择感兴趣的广告互动赚积分，看得越多，赚得越多；跳过广告就必须付费，通过监控机制，以弹出小窗的方式询问，要求短时间内响应；建立一种信任机制，通过用户诚信行为发放信任点数，信任点数越多，被打断的次数越少，询问是否在看的次数也就越少；注意力消费广告新模式连接广告主与用户之间的平台，赚取佣金。可借鉴之处在于收费模式的“太极转移”，目前的收费模式主要为付费下载或包月制，可以将收费模式转移到广告上。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 产品经理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>产品经理基本功系列笔记 01-如何做竞品分析，最全的竞品分析指南，附收藏链接</title>
      <link href="2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/"/>
      <url>2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>“如果你所做的一切都与你的竞争对手本质上是一样的，那么你就不太可能成功。“—— 迈克尔.波特</p></blockquote><p><strong>WHAT 竞品分析是什么？竞品分析的定义</strong><br>竞品分析（Competitive Analysis）一词最早源于经济学领域，是指对现有的或潜在的竞争产品的优势和劣势进行分析。通过找寻市场上存在竞争关系，高品质的产品，把他们进行分类和对比，输出结论为下一步决策提供正确的方向。<br>广泛意义上说，竞品分析就是根据分析目的，找到切入角度，对竞争对手或市场进行客观分析，找到竞品或自己的优势与不足，为下一步决策提供科学依据。<br>竞品分析是一个长时间定期持续积累，不断挖掘和分析的一个过程。<strong>设计产品最终目标就是追溯用户需求本身，解决用户痛点</strong>，而竞品分析就是解决用户痛点这道大题的思路方法，就好比要解开一道复杂的数学题，需要用到很多公式，而竞品分析就是一个环节中的一种公式而已。</p><a id="more"></a><p><strong>竞品分析与市场分析的区别</strong><br>市场分析、竞品分析分析在<em>分析目的、产品数量和分析维度</em>三个方面有所区别。</p><ul><li>市场分析以<strong>寻找市场机会，帮助产品定位为目标</strong>，<strong>较宏观</strong>，对具体的产品没有深入分析，产品<strong>数量较多</strong>。分析维度有市场规模、增长趋势、市场份额、竞争状况、市场机会、市场细分、用户画像、产品分析等；</li><li>竞品分析以<strong>竞争、借鉴、了解市场为目的</strong>，产品数量多在<strong>5个以内</strong>。分析维度包括功能、设计、技术、团队、运营、用户等；</li></ul><p><strong>WHY 为什么要做竞品分析？竞品分析有什么价值？</strong><br>竞品分析可以帮助我们更好地了解竞争环境，找准自身产品定位，制定竞争战略，同时发现竞品的发展情况和本品的优劣势，取长补短，通过对比，去糟存精，推动产品的优化迭代。深层次地挖掘产品背后的逻辑，不仅有助于产品迭代，同时也能帮助团队人员实现能力提升。</p><h3 id="竞品分析常见的目标"><a href="#竞品分析常见的目标" class="headerlink" title="竞品分析常见的目标"></a>竞品分析常见的目标</h3><blockquote><p>决策支持、学习借鉴、市场预警。</p></blockquote><p><strong>如果竞品分析的目的是决策支持，常见的竞品分析目标有如下几种：</strong></p><ul><li>判断是否该进入一个新市场、是否该做一个新产品；</li><li>帮助新产品做定位，找到细分市场，避免与巨头正面竞争；</li><li>通过分析竞品，制定产品的竞争策略；</li><li>在产品销售、竞标时，提炼卖点，帮助销售卖出产品</li></ul><p><strong>如果竞品分析的目的是学习借鉴，常见的竞品分析目标有如下几种：</strong></p><ul><li>通过分析业界成功产品，帮助挖掘需求，找到产品机会；</li><li>通过借鉴竞品，帮助形成产品的功能列表；</li><li>为功能的原型设计提供参考；学习竞品运营推广手段。</li></ul><p><strong>如果竞品分析的目的是市场预警，常见的竞品分析目标有如下几种：</strong></p><ul><li>宏观环境预警：发现政治环境、经济环境、技术环境和社会环境的异动；</li><li>行业环境预警：发现供应商、 客户、 现有竞争者、 新进入者和替代者的异动；</li><li>竞争对手监测：监测竞品的市场表现、竞品的推广手段、新竞争对手的出现。</li></ul><h3 id="竞品分析的内容"><a href="#竞品分析的内容" class="headerlink" title="竞品分析的内容"></a>竞品分析的内容</h3><blockquote><p>在做竞品分析时，我们常遇到以下几个问题和挑战：没框架，无从下手；找不到可靠的信息；复制黏贴，信息收集走走过场，停留表面，缺乏深度；追求大而全，缺乏聚焦；没有递进逻辑，得出错误结论……该怎么解决呢？</p></blockquote><p>做竞品分析时，我们应当跳出产品看竞争，关注产品背后的信息：竞品做的怎么样？他是如何做到的？他为什么要这么做？下一步他会怎么做？</p><p><strong>竞品分析的内容</strong>包含两部分：竞品各个维度下的客观特性罗列和主观分析评价。</p><ul><li><strong>客观特性罗列</strong>即从竞争对手或市场相关产品中，圈定一些需要考察的角度，得出真实的情况，此时，不需要加入任何个人的判断，应该用事实说话。</li><li><strong>主观分析评价</strong>是一种接近于用户流程模拟的结论，比如可以根据事实/个人观点，列出竞品或者自己产品的优势与不足。</li></ul><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718151748030.png" alt="image-20240718151748030" style="zoom:67%;" loading="lazy"><h3 id="竞品分析的流程"><a href="#竞品分析的流程" class="headerlink" title="竞品分析的流程"></a>竞品分析的流程</h3><blockquote><p>完整的竞品分析需要经过6个步骤：明确目标 → 选择竞品 → 确定分析维度 → 收集竞品信息 → 信息整理与分析 → 总结报告</p></blockquote><h4 id="明确目标"><a href="#明确目标" class="headerlink" title="明确目标"></a>明确目标</h4><p>在正式开工前，首要任务是确认本次竞品分析的目的，确保在行动前确认以下问题能够清晰回答：</p><ul><li>我的产品是什么/给哪个产品做竞品分析？</li><li>产品当前处于什么阶段？</li><li>产品面临什么主要问题与挑战？</li><li>做竞品分析的目的是什么？</li><li>做竞品分析的目标是什么？（该不该做、定位是什么、卖点是什么、竞争策略是什么、缩小差距、标杆比较）</li><li>竞品分析输出的成果是什么？</li></ul><p>每次进行竞品分析，其目标都会根据公司战略发展和产品所处阶段而有所不同，但竞品分析的目的不论多复杂，都可以从产品功能层面和战略发展层面进行分析和拓展。</p><ul><li><strong>基于产品功能层面</strong>，做竞品分析的目的多围绕在这几个方面：探寻产品设计的优缺点、了解竞争产品性能的稳定性和服务支持范围、发现功能设计方面可借鉴的点以及辅助自身产品进行迭代计划的整理和输出。</li><li><strong>基于战略发展层面</strong>，做竞品分析大多对比以下几个维度：定价模式、产品竞争力、服务模式、产品矩阵、客户群体；</li></ul><p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718153341059.png" alt="image-20240718153341059" loading="lazy"></p><h4 id="选择竞品"><a href="#选择竞品" class="headerlink" title="选择竞品"></a>选择竞品</h4><p><strong>如果是发展比较成熟的B端产品</strong>，可以从以下几个方面进行竞品的选择：</p><ul><li>初代产品：即该领域内的首个产品；了解发起人背景、经历等，顺着发展史可以做一些思路的启发，挖掘客户的原始诉求和需求的发展背景。</li><li>直接竞品：与自己产品方向最相关的竞品，也叫对标产品。直接竞品需要全方位的了解，知己知彼才能百战不殆。</li><li>间接竞品：与自己产品方向看似不相同，或产品方向不完全一致的产品，在某些重合的方向上做的优秀或突出。</li><li>头部竞品：即在行业内知名度最高，功能完整性更强，市场份额处于领先的产品。如，调研工具中问卷星、腾讯问卷等。</li></ul><p><strong>如果产品功能比较小众</strong>，还没有形成完整的行业方向，那么这里就要提到两个关键字<strong>发散</strong>和<strong>收敛</strong>。</p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718153721932.png" alt="image-20240718153721932" style="zoom:67%;" loading="lazy"><p><strong>【发散】</strong>首先第一步，基于自身产品的特性、产品的核心功能、行业特点等进行关键词的发散，尽可能多的提炼出适合的关键词。</p><p>以体验管理平台为例，“体验管理”在中国还是一个新生的产品方向，竞品难以很直观的找寻到，按照发散思路整理产品相关信息。</p><ul><li>体验度量：专业度量模型，全方位衡量体验变化</li><li>消费洞察：覆盖多元研究模型，用户偏好、消费行为研究自动化</li><li>数据采集：多种方式数据采集，实现全方位体验管理</li><li>体验管理：体验问题诊断智能化，派发及跟踪自动化</li></ul><p>提炼出关键词：体验监测、客户服务、品牌管理、CEM、体验咨询、体验管理、问卷、洞察…..</p><p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718153810941.png" alt="image-20240718153810941" loading="lazy"></p><p>关键词提炼完成，去哪里找竞品的信息呢？这里给大家罗列了三类信息查找渠道：</p><p><strong>行业报告/数据、搜索引擎以及权威媒体。</strong></p><p>B端产品和C端产品有很大的差异，B端产品的用户增长更多依靠线下组织行业峰会进行宣传和推广，因此不要忽略行业论坛、行业峰会、行业资讯能信息渠道。</p><blockquote><ul><li>官方渠道：较权威的就莫属于官方渠道了，我们可通过相关竞品官网、竞品官网控制台、官方论坛、官方社区等渠道进行搜索查找。该渠道的优势在于我们获得的内容和数据信息是非常权威且可靠的，但是劣势在于这些信息相对来说还是较主观的，因为官方信息不免会带有外宣效果或倾向于打打自身广告，对于产品深度内容会相对较少。</li><li>行业报告：较权威资料还可以通过各报告官网渠道进行获取，在这给大家分享一些获取网站。例如Gartner、艾瑞咨询、发现报告、洞见研报、行行查等。定竞品内容中关于“我国分布式存储市场领导者象限”就是通过行业报告中搜索查询到的，好多竞品资料在对应行业报告中也已有汇总统计，包括我们还比较关注的竞品市场占有率等内容，都可以通过行业报告中搜索获取到。</li><li>内部渠道：我们要充分利用好公司内部资源，包括公司内部商务、售前、售中（项目经理等）、售后（项目交付、运维等），因为这些团队在与客户沟通的过程中，能够获取并处理双息、多息信息，而我们就可以通过他们获取到这些竞品信息。</li><li>行业社区：通过相关行业开发者社区搜集竞品资料，例如容器行业相关社区包括Docker、Kubernetes、CoreOS、Red Hat OpenShift等，各行业对应社区也比较好找，只要对应搜索相关行业就能了解到对应社区。</li><li>购买/合作：想要深入了解竞品信息，还可以通过购买/合作的方式。通过购买相关竞品，我们可以对完整的竞品进行拆包，进一步了解产品的技术设计架构，了解到对应产品的核心功能等；还可以通过合作的方式，在相互谈合作的过程中了解并挖掘竞品布局，把握好聊天内容及尺度，同时注意切记将自身产品机密性内容暴露出去。</li><li>拜访客户：拜访客户是获取竞品信息的间接方式，当然我们不是直接上来就问客户竞品怎么怎么样，而是首先要基于自己产品的角度，例如用户体验、功能使用等跟客户进行沟通，在沟通过程中变相引导客户分享或者有些客户会主动进行分享并透露些相关竞品信息，这样我们就能有针对性的完成竞品信息的收集。</li><li>行业峰会：参加峰会有机会与各类产品交流，包括相关竞品公司代表或行业专家。通过与他们交流沟通，可以了解到竞品服务和情况。并且还能了解到一些关于市场趋势，前沿方向，行业、竞品动向，或者竞品的报告及演讲等。但是一般通过行业峰会获取到的竞品相关资料涉及广告较多，还需要甄别。</li></ul></blockquote><p>通过查找后，我们会检索出很多B端产品，如何剔除伪竞品？那么我们第二个关键词就要登场了！基于产品定位<strong>收敛</strong>~</p><p>B端产品的官网在设计和信息方面会进行非常全面的展示，筛选初期我们可以通过官网暴露的信息进行初筛，找到契合的竞品。</p><p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718154030698.png" alt="image-20240718154030698" loading="lazy"></p><p>找到竞品后，我们第二个难题就来了。B端产品分为半公开和非公开产品，两种类型的产品主要差一点在于是否进行商业售卖，但是共同点都是<strong>不透明、资料少、体验难度大</strong>。</p><blockquote><p>那么，面对toB产品试用难度大的情况，如何有效深入了解竞品功能？？</p></blockquote><p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718154109726.png" alt="image-20240718154109726" loading="lazy"></p><p><strong>首先，在竞品获取方面，半公开产品有以下几种方式：</strong></p><ul><li>查阅官网：toB的产品，尤其是半公开类型的产品，大多有自己的官方网站，可以通过官网暴露出的功能点和案例介绍来进行产品的初步了解和分析，通过官网可以了解到产品的定位、已接入的合作伙伴范围和行业覆盖情况。</li><li>试用申请/付费体验：当然有一些B端产品是有试用版的，可以去注册试用。但是一些核心功能大多是收费的，那么可以根据自身情况进行选择是否要投入成本进行付费体验；功能的使用能最大程度的帮助我们了解产品功能、交互方式以及具体的操作流程，是竞品分析最好的一种体验方式。</li><li>角色扮演：如果没有试用版，也没有费用支持我们付费体验，还有一个办法。就是通过官网的销售电话进行资讯，伪装成客户去了解竞品的定价模式、盈利模式以及交付方式等，大多数B端产品可以通过这种方式获得一些基础的产品能力介绍。</li></ul><p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718154223164.png" alt="image-20240718154223164" loading="lazy"></p><p><strong>针对非公开产品，更多是依赖人脉来获取竞品信息，</strong>比如淘系内部系统，可以通过自己一些同行交流或人脉去获得相关产品的体验机会（比如淘系商家后台可以找在淘宝开店的朋友去看看他的后台功能和框架）；由于这类非公开产品的试用机会非常难得，如果有体验的机会还是要尽可能详尽的记录竞品的细节，这里可以介绍几种其他小伙伴分享的成功经验：</p><ul><li>账号试用：这种方式是最理想的状态，能亲自体验产品功能和全流程。</li><li>行动跟踪记录：可以通过记录客户操作记录和流程来搭建客户体验地图，从流程角度记录客户需求和实际操作体验，便于后续分析。</li><li>用户访谈：一般在无法体验到系统功能时，可以通过对客服的访谈来了解对竞品的使用感受，以此来对比自身。</li><li>影子计划：在彼此非常信任的情况下，可以通过影子计划即录屏的方式详尽记录系统功能和客户操作，后续通过回放来提取分析信息。</li></ul><p><strong>另外，竞品也可按照如下方式进行分类：</strong></p><p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718154207529.png" alt="image-20240718154207529" loading="lazy"></p><h4 id="明确分析维度"><a href="#明确分析维度" class="headerlink" title="明确分析维度"></a>明确分析维度</h4><p>产品视角有八个竞品分析维度：</p><ul><li>产品功能</li><li>用户体验</li><li>盈利模式</li><li>用户特征</li><li>市场推广</li><li>团队背景</li><li>产品规划</li></ul><h4 id="收集信息"><a href="#收集信息" class="headerlink" title="收集信息"></a>收集信息</h4><p>可以通过行业媒体、社区、第三方平台、专利网站、企业及个人的人脉资源、产品体验测试、客服咨询、搜索查询等方式获得需要的信息。当然还有一些非常规手段，如套话、假招聘、假合作、假招标、猎头挖墙脚等方式，企业可以根据自身情况做判断。</p><h4 id="整理信息"><a href="#整理信息" class="headerlink" title="整理信息"></a>整理信息</h4><p>将收集到的竞品信息整合在一起，通过搭建好的分析大纲维度来整理资料。这一环节重点是要保留可靠真实信息，剔除干扰与不实数据，对数据来源加以标注。</p><p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718154416245.png" alt="image-20240718154416245" loading="lazy"></p><p>通过多竞品的分析，我们可以在众多竞品中对比出产品的优劣势，学习优秀竞品的前沿思想，达到借鉴参考的目的。同时，通过对竞品的详尽分析，可以了解到不同公司在战略规划和产品设计方向的差异，对自身产品的引导意义还需要结合自身团队情况、公司资源投入以及产品发展定位来进行综合分析。这样才能得到一份适合自己产品的有意义的竞品分析报告。</p><p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718154453880.png" alt="image-20240718154453880" loading="lazy"></p><h4 id="输出竞品分析结果"><a href="#输出竞品分析结果" class="headerlink" title="输出竞品分析结果"></a>输出竞品分析结果</h4><p>完成竞品分析后，需要撰写分析报告，报告需要围绕分析目标展开。具体形式通常有word、PPT、Excel、PDF等。</p><h3 id="竞品分析工具箱"><a href="#竞品分析工具箱" class="headerlink" title="竞品分析工具箱"></a>竞品分析工具箱</h3><h4 id="精益画布"><a href="#精益画布" class="headerlink" title="精益画布"></a>精益画布</h4><blockquote><p>精益画布可以用来做产品商业模式规划，也可以用来做产品商业模式分析。通过精益画布可以帮助产品经理更全面地思考、决策，从系统、商业的角度来规划产品、分析产品，建立产品的全局观。</p></blockquote><p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718151810434.png" alt="image-20240718151810434" loading="lazy"></p><h4 id="竞品画布"><a href="#竞品画布" class="headerlink" title="竞品画布"></a>竞品画布</h4><blockquote><p>竞品画布能够帮助新手快速上手，相当于竞品分析报告的MVP，能够快速验证分析思路是否正确（或符合领导要求），避免返工。</p></blockquote><p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718151824365.png" alt="image-20240718151824365" loading="lazy"></p><h4 id="战略画布"><a href="#战略画布" class="headerlink" title="战略画布"></a>战略画布</h4><blockquote><p>可以图形化地描述产品与竞品在各竞争要素上的相对强弱表现，可以应用战略画布实现产品差异化创新。<br>战略画布横轴显示的是产品的竞争元素，纵轴反映了用户体验与评价，我们把竞品在各维度上的表现得分点都描绘出来，连成一条线，就得到了「价值曲线」。价值曲线反馈了产品在各个竞争维度上的强弱程度，以此来分析出产品的战略轮廓。</p></blockquote><p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718151832477.png" alt="image-20240718151832477" loading="lazy"></p><h3 id="竞品分析的主要方法"><a href="#竞品分析的主要方法" class="headerlink" title="竞品分析的主要方法"></a>竞品分析的主要方法</h3><blockquote><p>主要方法有：比较法、矩阵分析法、竞品跟踪矩阵、功能拆解、探索需求、PEST分析、波特五力模型、SWOT分析等。</p><ul><li><strong>产品战略规划阶段：</strong>可使用PEST分析与波特五力模型归纳出SWOT分析中的机会与威胁，从而得出“该不该做”的战略结论。</li><li><strong>产品发展阶段：</strong>想要找出自身产品与竞品的优势、劣势，可以使用比较法、矩阵分析法、功能拆解、探索需求，取长补短，制定科学的竞争策略。</li><li><strong>当产品同质化严重想要寻找差异化创新突破时：</strong>可以使用战略画布+加减乘除法，寻找新的方向。</li></ul><p>竞品分析的各种方法都有其适用的场景，要根据实际需要做选择和组合，不需要一次性用到所有方法。</p></blockquote><h4 id="比较法"><a href="#比较法" class="headerlink" title="比较法"></a>比较法</h4><p>通过对竞品的横向比较，分析找出各自的优势与劣势。比较常用的有打勾比较、评分比较、描述比较。</p><p>运用方法：根据用户体验五要素，建立体验度量衡，进行评分制，进行横向对比。</p><h4 id="矩阵分析法"><a href="#矩阵分析法" class="headerlink" title="矩阵分析法"></a>矩阵分析法</h4><p>又称定位网格、四象限分析。通过二维矩阵的方式分析自己产品与竞品的定位、 特色、优势。可以帮助我们了解市场划分、产品定位、竞争优势、发现新机会。</p><p>运用方法：如下图，可以看到，这四类产品有如下特征。</p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718154747022.png" alt="image-20240718154747022" style="zoom:50%;" loading="lazy"><ul><li>市场占有率高，且市场增长率高的产品称为<strong>明星产品</strong>；</li><li>市场占有率高，但市场增长率低的产品称为<strong>现金牛产品</strong>；</li><li>市场占有率低，但市场增长率高的产品称为<strong>问题产品</strong>；</li><li>市场占有率和市场增长率都低的产品称为<strong>瘦狗产品</strong>。</li></ul><blockquote><p>针对这四类产品要采取的运营策略也是不同的。</p></blockquote><ul><li>明星产品：市场份额高，且有较大的成长空间，需要加大投资，使其继续增长。</li><li>现金牛产品：市场占有率高但没什么成长空间，属于成熟阶段，能够为企业带来大量的现金流，保持即可。</li><li>问题产品：市场占有率低，但增长率高，这种产品往往是一个企业的新产品，潜力大，但也伴随着风险，想提高市场占有率就要加大投资，以便快速抢占市场份额，加大投资可能会影响企业现有的成熟的业务，意味着企业需要转型，所以“问题”这个词很好地描述了这种产品，企业必须慎重考虑是继续发展该产品还是放弃。</li><li>瘦狗产品：市场占有率低，且增长率低，即无法带来现金流，也没有办法改善其增长问题，更多地是基于情感因素或者其他因素保留该产品，对于这类产品，需要尽快剥离或者放弃。</li></ul><h4 id="竞品跟踪矩阵"><a href="#竞品跟踪矩阵" class="headerlink" title="竞品跟踪矩阵"></a>竞品跟踪矩阵</h4><p>通过竞品跟踪矩阵，可以对竞品的历史版本进行跟踪记录，找到各版本的发展规律，从而推测竞品下一步的行动计划。</p><p>运用方法：需要提前关注各类竞品，时刻关注别人的更新日志。</p><h4 id="功能拆解"><a href="#功能拆解" class="headerlink" title="功能拆解"></a>功能拆解</h4><p>功能拆解是把竞品分解成一级功能、二级功能、三级功能甚至四级功能，以便全面了解竞品的构成，避免遗漏。</p><p>运用方法：核心的功能流程——梳理功能从开始到结束的关键状态和路径。</p><h4 id="探索需求"><a href="#探索需求" class="headerlink" title="探索需求"></a>探索需求</h4><p>5Why分析法找到深层次需求。</p><p>运用方法：沿着“为什么——为什么”的因果路径逐一提问，先问第一个“为什么”，获得答案后，再问为何会发生，以此类推，问5次“为什么”，或者更多，以此来挖掘出问题的真正原因。</p><h4 id="PEST分析"><a href="#PEST分析" class="headerlink" title="PEST分析"></a>PEST分析</h4><p>对宏观环境进行分析，通过分析找到机会，认清威胁与挑战的模型。宏观环境会影响行业发展，行业环境会影响企业发展，企业环境会影响产品发展。</p><p>运用方法：</p><ol><li>情报收集<br>收集与你的业务有关的资讯。必须收集可靠的资讯，如政府收集的各种统计数据、智囊团的研究报告、行业协会发布的资讯、报纸报道和专业杂志的专题文章，以便收集准确的资讯。</li><li>分类为PEST的四个要素。上一步收集的信息分为四个要素：PEST（政治、经济、社会、技术）。<br>Politics（政治）：Politics（政治环境因素）从政治、法律、税收制度等角度分析影响您公司的因素。具体分析项目包括法律和放松管制、国家政策、税收制度审查、政府趋势、公民团体（例如NPO）的趋势、最高法院判决的变化以及外交关系的趋势。<br>Economy（经济）：经济分析经济趋势变化对贵公司的影响。具体分析项目包括经济、通胀和通缩进程、外汇、利率、经济增长率、日本央行短观、失业率和工业指数。<br>Society（社会）：该协会（社会环境因素）分析与消费者生活方式有关的问题。具体分析项目包括人口统计、家庭数量、舆论/社会意识、教育、犯罪、环境、健康和文化等信息。<br>Technology（技术）：技术（Technical Environmental Factors）分析随着时代变化而发展起来的新技术给企业带来的因素。具体分析项目包括技术创新、专利、信息提供者的投资趋势等。</li><li>事实分类和解释<br>对PEST四个要素的信息进一步分为“事实”和“解释”。在 PEST 分析中只使用事实是可取的，如果将带有主观假设的解释纳入业务战略，则在许多情况下结果不伴随。</li><li>将“事实”分为机会和威胁<br>将收集到的信息的事实分类为“机会”和“威胁”。机会是可能成为公司机会的因素，而威胁是可能成为风险的因素。即使从行业整体来看被认为是“机会”的因素成为对公司的“威胁”，或者相反，从行业整体来看被认为是“威胁”的因素从整个行业的角度来看，这对公司来说是一个“机会”，可能会出现这种情况。因此，重要的是要关注对公司的影响，而不是一般影响。此外，在被认为对公司构成“威胁”的因素中，可能会有新业务的机会，因此最好从广泛的角度对其进行分类。</li><li>分类为短期或长期<br>在将它们分类为机会和威胁之后，我们继续确定这些影响是在短期内还是长期内发生的过程。如果 PEST 的各个因素对公司的影响没有在时间轴上进行组织，则可能会在团队成员彼此不知情的情况下将业务战略付诸实践。在制定策略之前，最好将“机会”和“威胁”的时间线统一起来，以便所有成员进行更有成效的讨论。</li><li>纳入经营战略<br>最后的过程是将到此为止的分析结果纳入业务战略并付诸实践。在此步骤中，重要的是通过明确机会来实现业务增长，同时通过明确威胁来避免风险。<br>当然，仅 PEST 分析不会产生具体的结果，因此建议在进行分析时牢记“如何在未来的战略中利用分析结果”。</li></ol><h4 id="波特五力模型"><a href="#波特五力模型" class="headerlink" title="波特五力模型"></a>波特五力模型</h4><p>用于对行业环境的分析，是为了评估出某一行业的吸引力与利润率而形成的工具，可为企业是否进军一个新行业做决策参考。</p><h4 id="SWOT分析"><a href="#SWOT分析" class="headerlink" title="SWOT分析"></a>SWOT分析</h4><p>通过分析得出优势、劣势、机会、威胁，以便制定竞争策略，如扬长（发挥优势）、避短（规避劣势）、趋利（抓住机会）、避害（避开威胁）等。</p><p>运用方法：</p><ul><li>外部机会，如果刚好“一家独大”或者是属于自己的优势，则被称为“机会优势战略”（OS）</li><li>外部机会如果是一种威胁，存在一定的短板，则被称为“机会劣势战略”（OW）</li><li>如果既具有优势但却存在外部威胁，则被称为“优势威胁战略”（ST）</li><li>但是既是威胁又是你的劣势，请及时逃离并消除。这个就是“威胁劣势战略”（TW）</li></ul><blockquote><p>举个例子：</p></blockquote><p>近几年双11电商平台的产品很火（O），曾经任职某集团电商产品经理（S）的小明准备利用自己的特长，走向风口行业，做一款商家使用的产品（OS）。</p><p>但发现想要打造一款商家使用的产品并不容易，需要懂很多电商的知识，但是从来没学过开发知识（W），于是报班学习，努力掌握相关技能（OW）。</p><p>到了市场调研环节，发现竞争非常激烈（T），重新判断现状：对电商基础的深刻认识，但开发产品的经验有些薄弱。</p><p>于是，在几轮测试中，不断观察用户反馈及时调整产品战略部署（ST）、扬长避短（TW），最终成功让商户为此买单。</p><h4 id="APPEALS"><a href="#APPEALS" class="headerlink" title="$APPEALS"></a>$APPEALS</h4><p>通过将需求分为8个不同的类别，了解客户的期望和竞争对手的水平，帮助企业定位到自身产品和竞品的差异，从而制定有针对性的营销和产品策略。这8个需求类别分别是：价格、可获得性、包装、性能、易用性、保障性、生命周期成本、社会接受度</p><h4 id="加减乘除"><a href="#加减乘除" class="headerlink" title="加减乘除"></a>加减乘除</h4><p>当竞争对手已经取得了压倒性的领先优势时，与其想着如何比他更好，不如想象如何做得不同。加减乘除法的使用也很简单，通过「战略画布」绘制出竞品的价值曲线，在对方价值曲线上做「加减乘除」，能够帮助我们进行差异化创新：</p><p>运用方法：其实就是取其精华，取其糟粕。</p><ul><li>加：哪些竞争元素的表现可以比竞品好一些？用户对竞品的现状有哪些不满意的地方？针对以上问题，我们可以有目的地进行优化</li><li>减：哪些竞争元素的表现可以比竞品差一些？看看竞品是否在功能上过度设计，所提供的超过用户所需的功能徒然增加成本却没有好效果。我们通过弱化这些竞争元素来降低成本。</li><li>乘：哪些元素是同行中从未有过的，可以创新？也就是要发现并创造新的用户价值，提升产品的竞争力</li><li>除：哪些元素是被同行认定为是理所当然的，需要删除？删除为了竞争而攀比的元素，这些元素经常被认为是理所当然的，虽然他们不再具有价值，甚至还减少了产品的价值。</li></ul><h3 id="竞品分析报告框架"><a href="#竞品分析报告框架" class="headerlink" title="竞品分析报告框架"></a>竞品分析报告框架</h3><p>报告的结构 以「总分总」的结构来表达。</p><ul><li>总述：包括竞品分析的背景、目的、目标、分析的思路、报告的目录、关键发现（类似论文前面的摘要）。</li><li>分述：主要按分析维度划分章节，介绍每个分析维度的具体分析过程与小结。</li><li>总结：包括结论、对产品提出的建议、行动计划、附录等。要充分考虑读者的阅读体验，结论先行，把竞品分析的关键发现、要点总结放到前面。</li></ul><p><img src="/2024/07/17/Product-Manager-Basic-Skills-Series-Notes-01-How-to-do-competitive-product-analysis/image-20240718151846656.png" alt="image-20240718151846656" loading="lazy"></p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><ol><li><a href="https://mp.weixin.qq.com/s/hl_xeWFE4ZE027l9SHjBTg">https://mp.weixin.qq.com/s/hl_xeWFE4ZE027l9SHjBTg</a> 竞品分析方法大全 | 16种竞品分析方法+50多维度竞品方法论</li><li><a href="https://mp.weixin.qq.com/s/KFGTOUFNuIc8-MTxZSBD0w">https://mp.weixin.qq.com/s/KFGTOUFNuIc8-MTxZSBD0w</a> 竞品分析怎么做？要分析哪些维度？看这一篇就足够</li><li><a href="https://mp.weixin.qq.com/s/PET75heqgPPkxwJcKOWkZQ">https://mp.weixin.qq.com/s/PET75heqgPPkxwJcKOWkZQ</a> 终于有人把竞品分析讲清楚了！好详细！</li><li><a href="https://mp.weixin.qq.com/s/rqHCmlOIZu7QGuTBs542wQ">https://mp.weixin.qq.com/s/rqHCmlOIZu7QGuTBs542wQ</a> 实用攻略：如何做出一份出色的竞品分析？</li><li><a href="https://mp.weixin.qq.com/s/9p_XT9H_BzjcPD82sXJYQg">https://mp.weixin.qq.com/s/9p_XT9H_BzjcPD82sXJYQg</a> 竞品分析进阶指南 | 16种高效策略助力产品决策（实战案例）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 产品经理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞品分析 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
